<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.8.0.v201804241733</property>
    <simple-property-list name="includeResource">
        <value>Magellan_mashboard</value>
    </simple-property-list>
    <property name="units">in</property>
    <method name="beforeFactory"><![CDATA[rowNb=0;]]></method>
    <property name="theme">demo 2018.defaultTheme</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">fixed layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">/ThemesReportItems31.rptlibrary</property>
            <property name="namespace">ThemesReportItems31</property>
        </structure>
        <structure>
            <property name="fileName">Report Libraries/demo 2018.rptlibrary</property>
            <property name="namespace">demo 2018</property>
        </structure>
    </list-property>
    <parameters>
        <dynamic-filter-parameter name="LocationP" id="2089">
            <property name="valueType">dynamic</property>
            <expression name="valueExpr" type="javascript">dataSetRow["Location"]</expression>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">IN([Location],"Thames valley park")</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="linkedDataModelName">Container Data Model</property>
            <property name="column">Location</property>
            <property name="displayType">simple</property>
            <property name="controlType">list-box</property>
            <simple-property-list name="filterOperator">
                <value>in</value>
            </simple-property-list>
        </dynamic-filter-parameter>
    </parameters>
    <data-sources>
        <data-mart-data-source name="Data object" id="7">
            <property name="datamartURL">Data Objects/Toronto Trip Data</property>
            <property name="accessType">latest</property>
        </data-mart-data-source>
        <oda-data-source extensionID="com.actuate.data.oda.static" name="Static Data Source" id="1903"/>
        <data-mart-data-source name="Data Object Container data" id="820">
            <property name="datamartURL">Data Objects/MOD_Act_2</property>
            <property name="accessType">transient</property>
        </data-mart-data-source>
    </data-sources>
    <data-sets>
        <data-mart-data-set name="Monitoring Data Set" id="1825">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">now</property>
                    <expression name="expression" type="javascript">BirtDateTime.now()</expression>
                    <property name="dataType">time</property>
                </structure>
                <structure>
                    <property name="name">elapsedTime</property>
                    <expression name="expression" type="javascript">row["RandomNumber1"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">StartTime</property>
                    <expression name="expression" type="javascript">BirtDateTime.addSecond(BirtDateTime.now(),row["elapsedTime"]*-1)</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">elapsedTimeMSS</property>
                    <expression name="expression" type="javascript">BirtDateTime.diffMinute(row["StartTime"],BirtDateTime.now()) + ":" +&#13;
BirtStr.right("0" + BirtMath.mod(row["elapsedTime"],60) , 2)</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">info</property>
                    <expression name="expression" type="javascript">"&lt;div align='left'>" +&#13;
"&lt;table style='width:100%'> " +&#13;
"&lt;tr>" +&#13;
"&lt;td colspan = '3' >&lt;b>Customer: " + row["CustomerName1"] + "&lt;/b>&lt;/td>" +&#13;
"&lt;td colspan = '2'>&lt;a href='http://web.skype.com' target='_blank'>Contact via Skype   -&lt;/a>&lt;a href='http://process.eimdemo.com:8080/home/system/app/processExperience/web/perform/items/000D3A11A65811E7E51E974BBAD850E1.1/000D3A11A65811E7E51EB063F99AD0E1/6550dfdcfc863508a5afbc5ceff0a9de/R2VyYWxkIEJhbm5pc2g%253D' target='_blank'>-    Launch Process&lt;/a>&lt;/td>" + &#13;
"&lt;/tr>" +&#13;
"&lt;tr>" +&#13;
"&lt;td colspan = '3' >&lt;b>&lt;font color='#f7cb09'>Vehicle information&lt;/td>&lt;td colspan = '2' >&lt;/b>&lt;font color='#f7cb09'>Trip information&lt;/font>&lt;/b>&lt;/td>" +&#13;
"&lt;/tr>" +&#13;
"&lt;tr>" +&#13;
"&lt;td>&lt;b>Car type: &lt;/b>&lt;/td>  " +&#13;
"&lt;td>" +  row["CarType1"]  + "&lt;/td>" +&#13;
"&lt;td rowspan='3'>&lt;img src=  " + encodeURI("http://analytics.eimdemo.com/iportal/servlet/DownloadFile?name=/Applications/CityTaxi/Images/"+ row["VehicleID"] + ".jpg" + "&amp;showBanner=false&amp;userid=administrator")  + ">&lt;/td> " +&#13;
"&lt;td>&lt;font color='#f7cb09'>Time Start: &lt;/font>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" +  Formatter.format(row["StartTime"],"hh:mm:ss") +  "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;tr> " +&#13;
"&lt;td>&lt;b>Vehicle: &lt;/b>&lt;/td>  " +&#13;
"&lt;td> " + row["VehicleMake"] + "&lt;/td> " +&#13;
"&lt;td>&lt;font color='#f7cb09'>GPS Start Lat/Lng) : &lt;/font>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" +  row["StartLocationLat1"] + "/" + row["StartLocationLong1"] + "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;tr> " +&#13;
"&lt;td style='font-size: 16px'>&lt;b>Failure Prediction:&amp;nbsp;&lt;/b>&lt;/td>  " +&#13;
"&lt;td style='font-size: 16px'> " + Formatter.format(row["pred_Failure"],"0.00%") + "&lt;/td> " +&#13;
&#13;
"&lt;td>&lt;font color='#f7cb09'>Elapsed time: &lt;/font>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" + row["elapsedTimeMSS"]  + "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;/table> " +  &#13;
"&lt;/div>"</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">CurrentLat</property>
                    <expression name="expression" type="javascript">row["StartLocationLat1"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">CurrentLong</property>
                    <expression name="expression" type="javascript">row["StartLocationLong1"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">info2</property>
                    <expression name="expression" type="javascript">"&lt;div align='left'>" +&#13;
"&lt;table style='width:100%'> " +&#13;
"&lt;tr>" +&#13;
"&lt;td style='font-size: 16px' colspan = '3'>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? " Clients : " : "Customer: ") + "&lt;/b>" + row["CustomerName1"] + "&lt;/td>" +&#13;
"&lt;/tr>" +&#13;
"&lt;tr>" +&#13;
"&lt;td colspan = '3' style='color:#f7cb09'>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Véhicule" : "Vehicle information") + "&lt;/b>&lt;/td>" +&#13;
"&lt;td colspan = '2' style='color:#f7cb09'>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Information de voyage" : "Trip information") + "&lt;/b>&lt;/td>" +&#13;
"&lt;/tr>" +&#13;
"&lt;tr>" +&#13;
"&lt;td>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Type de véhicule : " : "Car type: ") + "&lt;/b>&lt;/td>  " +&#13;
"&lt;td>" +  row["CarType1"]  + "&lt;/td>" +&#13;
"&lt;td rowspan='3'>&lt;img src=  " + encodeURI("http://@@host@@:8700/iportal/servlet/DownloadFile?name=/Applications/@@app@@/images/" + row["VehicleID"] + ".jpg" + "&amp;showBanner=false&amp;userid=administrator")  + ">&lt;/td> " +&#13;
"&lt;td>&lt;style='color:#f7cb09'>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Départ : " : "Time Start:") + "&lt;/b>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" +  Formatter.format(row["StartTime"],"hh:mm:ss") +  "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;tr> " +&#13;
"&lt;td>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Véhicule : " : "Vehicle:") + "&lt;/b>&lt;/td>  " +&#13;
"&lt;td> " + row["VehicleMake"] + "&lt;/td> " +&#13;
"&lt;td>&lt;style='color:#f7cb09'>&lt;b>GPS Lat/Lng : &lt;/b>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" +  row["StartLocationLat1"] + "/" + row["StartLocationLong1"] + "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;tr> " +&#13;
"&lt;td>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Prédiction de panne : " : "Failure Prediction: ") + "&lt;/b>&lt;/td>  " +&#13;
"&lt;td> " + Formatter.format(row["pred_Failure"],"0.00%") + "&lt;/td> " +&#13;
"&lt;td>&lt;style='color:#f7cb09'>&lt;b>" + (reportContext.getLocale() == "fr_FR" ? "Temps écoulé : " : "Elapsed time:") + "&lt;/b>&lt;/td> " +&#13;
"&lt;td style='background-color: #FFFFAE'>" + row["elapsedTimeMSS"]  + "&lt;/td> " +&#13;
"&lt;/tr> " +&#13;
"&lt;/table> " +  &#13;
"&lt;/div>"</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">VehicleID</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">VehicleID</text-property>
                    <text-property name="heading">VehicleID</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">VehicleMake</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">VehicleMake</text-property>
                    <text-property name="heading">VehicleMake</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">pred_Failure</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">pred_Failure</text-property>
                    <text-property name="heading">pred_Failure</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">City1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">City</text-property>
                    <text-property name="heading">City</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">TripDate1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TripDate</text-property>
                    <text-property name="heading">TripDate</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">StartTime1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">StartTime</text-property>
                    <text-property name="heading">StartTime</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">EndTime1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">EndTime</text-property>
                    <text-property name="heading">EndTime</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">CustomerName1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">CustomerName</text-property>
                    <text-property name="heading">CustomerName</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">CustomerType1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">CustomerType</text-property>
                    <text-property name="heading">CustomerType</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">CarType1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">CarType</text-property>
                    <text-property name="heading">CarType</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">StartLocationLat1</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">StartLocationLat</text-property>
                    <text-property name="heading">StartLocationLat</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">StartLocationLong1</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">StartLocationLong</text-property>
                    <text-property name="heading">StartLocationLong</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">Distance1</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">Distance</text-property>
                    <text-property name="heading">Distance</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">Status1</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">Status</text-property>
                    <text-property name="heading">Status</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">Satisfaction1</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">Satisfaction</text-property>
                    <text-property name="heading">Satisfaction</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">CommentID2</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">CommentID</text-property>
                    <text-property name="heading">CommentID</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">now</property>
                    <property name="analysis">dimension</property>
                </structure>
                <structure>
                    <property name="columnName">RandomNumber1</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">RandomNumber</text-property>
                    <text-property name="heading">RandomNumber</text-property>
                    <property name="indexColumn">false</property>
                    <property name="compressed">false</property>
                </structure>
                <structure>
                    <property name="columnName">elapsedTime</property>
                    <property name="analysis">measure</property>
                </structure>
                <structure>
                    <property name="columnName">StartTime</property>
                    <property name="analysis">dimension</property>
                </structure>
                <structure>
                    <property name="columnName">elapsedTimeMSS</property>
                    <property name="analysis">attribute</property>
                </structure>
                <structure>
                    <property name="columnName">info</property>
                    <property name="analysis">attribute</property>
                </structure>
                <structure>
                    <property name="columnName">CurrentLat</property>
                    <property name="analysis">measure</property>
                </structure>
                <structure>
                    <property name="columnName">CurrentLong</property>
                    <property name="analysis">measure</property>
                </structure>
                <structure>
                    <property name="columnName">info2</property>
                    <property name="analysis">attribute</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">VehicleID</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">VehicleMake</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">pred_Failure</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">City1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">TripDate1</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">StartTime1</property>
                        <property name="dataType">time</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">EndTime1</property>
                        <property name="dataType">time</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">CustomerName1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">CustomerType1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">CarType1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">StartLocationLat1</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">StartLocationLong1</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">Distance1</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">Status1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">Satisfaction1</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">CommentID2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">RandomNumber1</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">now</property>
                        <property name="dataType">time</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">elapsedTime</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">StartTime</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">elapsedTimeMSS</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">info</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">23</property>
                        <property name="name">CurrentLat</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">24</property>
                        <property name="name">CurrentLong</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">25</property>
                        <property name="name">info2</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data object</property>
            <property name="dataObject">Monitoring</property>
            <list-property name="selectedColumns">
                <structure>
                    <property name="position">1</property>
                    <property name="name">VehicleID</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">VehicleMake</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">pred_Failure</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">City1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">TripDate1</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">StartTime1</property>
                    <property name="dataType">time</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">EndTime1</property>
                    <property name="dataType">time</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">CustomerName1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">CustomerType1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">CarType1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">StartLocationLat1</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">StartLocationLong1</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">Distance1</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">Status1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">Satisfaction1</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">CommentID2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">17</property>
                    <property name="name">RandomNumber1</property>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
        </data-mart-data-set>
        <oda-data-set extensionID="com.actuate.data.oda.static.dataSet" name="Gauge" id="1904">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">ID</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">ID</text-property>
                    <text-property name="heading">ID</text-property>
                </structure>
                <structure>
                    <property name="columnName">VALUE</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">VALUE</text-property>
                    <text-property name="heading">VALUE</text-property>
                </structure>
                <structure>
                    <property name="columnName">MAX</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MAX</text-property>
                    <text-property name="heading">MAX</text-property>
                </structure>
                <structure>
                    <property name="columnName">COLOR</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">COLOR</text-property>
                    <text-property name="heading">COLOR</text-property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">ID</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">VALUE</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">MAX</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">COLOR</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Static Data Source</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">ID</property>
                    <property name="nativeName">ID</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">VALUE</property>
                    <property name="nativeName">VALUE</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">MAX</property>
                    <property name="nativeName">MAX</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">COLOR</property>
                    <property name="nativeName">COLOR</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{"Columns":["ID","VALUE","MAX","COLOR"],"Types":[1,4,3,1]}]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>ID</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
            <design:uiHints>
              <design:displayName>ID</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>ID</design:label>
            <design:formattingHints>
              <design:displaySize>-1</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Value</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
            <design:uiHints>
              <design:displayName>Value</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>Value</design:label>
            <design:formattingHints>
              <design:displaySize>-1</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>DATA</name>
                    <value>[["Gauge1","90","125","gray"],["Gauge2","170","240","green"],["Gauge3","103","125","orange"],["Gauge4","8","10","red"],["Gauge5","4.7","5","green"]]</value>
                </ex-property>
            </list-property>
        </oda-data-set>
    </data-sets>
    <property name="linkedDataModels">
        <data-mart-linked-data-model name="Data Model" id="2072">
            <property name="dataSource">Data object</property>
            <property name="dataObject">Data Model</property>
        </data-mart-linked-data-model>
        <data-mart-linked-data-model name="Container Data Model" id="2086">
            <property name="dataSource">Data Object Container data</property>
            <property name="dataObject">Data Model</property>
        </data-mart-linked-data-model>
    </property>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">custom</property>
            <property name="orientation">landscape</property>
            <property name="topMargin">10px</property>
            <property name="leftMargin">10px</property>
            <property name="bottomMargin">10px</property>
            <property name="rightMargin">10px</property>
            <property name="height">1000px</property>
            <property name="width">1520px</property>
            <property name="headerHeight">1px</property>
            <property name="footerHeight">1px</property>
        </simple-master-page>
    </page-setup>
    <body>
        <grid id="1826">
            <property name="borderBottomStyle">none</property>
            <property name="borderLeftStyle">none</property>
            <property name="borderRightStyle">none</property>
            <property name="borderTopStyle">none</property>
            <column id="1827"/>
            <column id="1829">
                <property name="width">22%</property>
            </column>
            <row id="1830">
                <cell id="1831">
                    <property name="paddingTop">5pt</property>
                    <property name="paddingLeft">5pt</property>
                    <property name="paddingBottom">5pt</property>
                    <property name="paddingRight">5pt</property>
                    <grid id="1898">
                        <property name="borderBottomColor">#E6E9ED</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#E6E9ED</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#E6E9ED</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#E6E9ED</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <column id="1899"/>
                        <row id="1900">
                            <property name="height">450px</property>
                            <cell id="1901">
                                <property name="backgroundColor">white</property>
                                <extended-item extensionName="HTMLControl" id="6">
                                    <property name="html">&lt;!--  &#13;
// &lt;copyright company="MAPCITE">&#13;
// Copyright (c) 2017 All Rights Reserved&#13;
// &lt;/copyright>&#13;
// &lt;author>MAPCITE&lt;/author>&#13;
// &lt;date>05/03/2018 00:00:00&lt;/date>&#13;
// &lt;summary>Unless otherwise stated, the software is provided "as-is," without any express or implied warranty. In no event shall MAPCITE be held liable for any damages arising from the use of the software.&lt;/summary>&#13;
-->&#13;
&#13;
&lt;div id="map">&#13;
&#13;
    &lt;div id="popup" class="ol-popup">&#13;
      &lt;a href="#" id="popup-closer" class="ol-popup-closer">&lt;/a>&#13;
      &lt;div id="popup-content" style="max-height:300px; overflow:auto; margin-top:10px;">&lt;/div>&#13;
    &lt;/div>&#13;
    &#13;
    &lt;div class="modal-dialog" style="display:none"> &#13;
		&lt;div>&#13;
			&lt;h2>Please wait...&lt;/h2>&#13;
			&lt;p>calculating and indexing shapes can take a little while&lt;/p>&#13;
		&lt;/div>&#13;
	&lt;/div>&#13;
&#13;
&lt;/div></property>
                                    <property name="css">/*&#13;
// &lt;copyright company="MAPCITE">&#13;
// Copyright (c) 2017 All Rights Reserved&#13;
// &lt;/copyright>&#13;
// &lt;author>MAPCITE&lt;/author>&#13;
// &lt;date>05/03/2017 00:00:00&lt;/date>&#13;
// &lt;summary>Unless otherwise stated, the software is provided "as-is," without any express or implied warranty. In no event shall MAPCITE be held liable for any damages arising from the use of the software.&lt;/summary>&#13;
*/&#13;
&#13;
#map,.tooltip-measure{background-color:#fff}.featureAttributes{border:1px solid #ddd;margin-bottom:5px;padding:5px}.ol-popup{padding-left:0;padding-right:0}.tooltip{border:1px solid #ddd;-webkit-filter:drop-shadow(0 2px 0 rgba(0,0,0,.1));filter:drop-shadow(0 2px 0 rgba(0, 0, 0, .1))}.tooltip-measure{padding:3px;color:#000;text-align:center;text-decoration:none}#map{border:1px solid #eee;position:relative;top:0;left:0;overflow:hidden;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;color:#333}#map,.menuBtn{line-height:1.42857143}.menuBtn,.modal-dialog div{text-align:center;vertical-align:middle}*{box-sizing:border-box}.row::after{content:"";clear:both;display:table}[class*=col-]{float:left;padding:5px;text-align:center}.col-1{width:8.33%}.col-2{width:16.66%}.col-3{width:25%}.col-4{width:33.33%}.col-5{width:41.66%}.col-6{width:50%}.col-7{width:58.33%}.col-8{width:66.66%}.col-9{width:75%}.col-10{width:83.33%}.col-11{width:91.66%}.col-12{background:#fff;width:100%;padding:0}.col-12 h1{margin:0}h4{color:#888}.custom-scale,.custom-zoom{position:absolute;z-index:1}.custom-zoom{top:5px;left:5px}#mapMenuList,.intersectsDiv,.ol-mycontrol{position:absolute;top:0}.custom-scale{bottom:5px;left:55px;color:#000;background:#fff;padding:10px;opacity:1;-webkit-filter:drop-shadow(0 1px 1px rgba(0, 0, 0, .2));filter:drop-shadow(0 1px 1px rgba(0, 0, 0, .2))}.intersectsDiv{opacity:.95;-webkit-filter:drop-shadow(0 1px 2px rgba(0, 0, 0, .2))}.ol-mycontrol{opacity:1;left:0;bottom:0;z-index:2;width:50px;height:100%;background:#fff;-webkit-filter:drop-shadow(0 1px 1px rgba(0, 0, 0, .2));filter:drop-shadow(0 1px 1px rgba(0, 0, 0, .2))}.custom-scale-inner{border:1px solid rgba(0,0,0,1);border-radius:0;border-top:none;color:#000;font-size:10px;text-align:center;margin:1px}.custom-zoom button{background-color:rgba(0,0,0,1);font-size:24px}.custom-mouse-position{position:absolute;z-index:2;bottom:50px;left:55px;color:#000;font-size:10px}.custom-attribution{position:absolute;z-index:2;bottom:10px;right:10px;color:#000;background:0 0;padding:0}.custom-attribution ul{list-style-type:none;padding:5px 5px 0;font-size:10px}.custom-attribution ul li{display:inline}.custom-attribution button,.custom-attribution img{display:none}.intersectsDiv{bottom:37px;right:0;background-color:#fff;height:100%;max-width:500px;overflow:auto;filter:drop-shadow(0 1px 2px rgba(0, 0, 0, .2))}.intersectsDiv table{width:100%;margin-top:20px;border-top:1px solid #ddd;border-spacing:0;border-collapse:collapse}.intersectsHeader{padding:10px;border:1px solid #ddd}.intersectsCount{padding-right:15px;font-size:14px}.intersectsDiv tr:nth-child(even){background-color:#f2f2f2}.intersectsDiv td,.intersectsDiv th{border-bottom:1px solid #ddd;padding:5px;text-align:center}.menuBtn{margin-bottom:0;font-size:14px;font-weight:400;white-space:nowrap;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:none;color:#000;background-color:#fff;text-decoration:none;opacity:1;height:75px;width:100%}.menuBtn_active{background-color:#39f}#mapMenuList{left:-300px;background:#fff;z-index:-2;opacity:0;width:50px}#map .list-group{padding:0}#map .list-group-item{position:relative;display:block;padding:10px;min-width:50px;height:75px;width:100%}#map .list-group-item-colour{position:relative;display:block;text-align:center;padding:5x;min-width:50px}.progress{width:100%;background-color:#fff}.progressBar{width:100%;height:1px;background-color:#ddd}.ol-popup{position:absolute;background-color:#fff;padding:15px;border-radius:0;bottom:12px;left:-50px;min-width:280px;-webkit-filter:drop-shadow(0 1px 2px rgba(0, 0, 0, .2));filter:drop-shadow(0 1px 2px rgba(0, 0, 0, .2))}.ol-popup:after,.ol-popup:before{top:100%;border:solid transparent;content:" ";height:0;width:0;position:absolute;pointer-events:none}.ol-popup:after{border-top-color:#fff;border-width:10px;left:48px;margin-left:-10px}.ol-popup:before{border-top-color:#fff;border-width:11px;left:48px;margin-left:-11px}.ol-popup-closer{text-decoration:none;position:absolute;top:2px;right:8px;color:#999}.ol-popup-closer:after{content:"X"}.color-scale,.color-scheme{margin:3rem auto;padding:0;list-style:none;overflow:hidden}.color-scheme li{width:10rem;height:10rem;float:left;position:relative}.color-scale li{width:5rem;height:5rem;float:left;position:relative;-webkit-transition:opacity .3s ease-in-out;-moz-transition:opacity .3s ease-in-out;transition:opacity .3s ease-in-out;cursor:pointer}.color-scale li:hover{opacity:.8}.color-info{position:absolute;padding:.5rem;background-color:#FFF;top:50%;left:50%;transform:translate(-50%,-50%);border-radius:5px;font-size:85%;text-align:center}.color-info span{display:block}.modal-dialog{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1040;padding:10px;display:none;opacity:.95}.modal-dialog div{position:relative;top:40%;width:200px;margin-right:auto;margin-left:auto;background:#fff;padding:10px;filter:drop-shadow(0 1px 2px rgba(0, 0, 0, .2))}</property>
                                    <method name="clientOnCreate"><![CDATA[// JavaScript source code
// © MAPCITE 2017
// <copyright company="MAPCITE">
// Copyright (c) 2017 All Rights Reserved
// </copyright>
// <author>MAPCITE</author>
// <date>01/03/2018 00:00:00</date>
// <summary>Unless otherwise stated, the software is provided "as-is," without any express or implied warranty. In no event shall MAPCITE be held liable for any damages arising from the use of the software.</summary>
var config = {
    /* specify layer defaults */
    layers: {
        base: 'OSM', // OSM, MONO, LITE, LABELS
        markers: true,
        heatmap: false,
        shapes: false
    },
    /* specify a KPI field - defaults to number of locations if blank */
    kpiColumn: "Aggregation", //
    /* specify the default image url field for the map markers */
    markerImageColumn:"MapContainerIcon", //"Pin", //"http://image path"
    /* specify marker label fields. Example: ["Store", "Time"] */
    markerLabelFields: ["Container ID",".","Temprature","Light Level"],
    /* specify the default center coornidates for the map */
    mapCenter: {
        /* the latitude for the center */
        lat: 51.4603277,
        /* the longitude for the center */
        lng: -0.9313882
    },
    /* specifiy a default map zoom level*/
    mapZoomLevel: 19,
    /* specify colurs used for heatmap layer. Default: ['#00f', '#0ff', '#0f0', '#ff0', '#f00']*/
    heatmapColours: ['#00f', '#0ff', '#0f0', '#ff0', '#f00'],
    /* specify if the heatmap bias should be reversed - **Experimental** -  */
    heatmapAlt: false,
    /* specify if the data should cluster on the map - advised for large datasets */
    clusterMarkers: false,
    /* specify colurs used for area map layer (text or hexidecimal) example : ['white', 'yellow', 'orange', 'red'] or ['ffffff', '000000']*/
    shapeColours: ['ffffff', '0076b6'] //['white', 'yellow', 'orange', 'red']
    /**/
};

var featureLayer,map,mask,mousePositionControl,featureCollection,features,scaleLineControl,index,clusterSource,colorStops,scaleStops,polygonStyle,polygonLayer,heatmapLayer,clusterLayer,extractSource,extractLayer,shapes,drawMode,annotateMode,overlay,draw,snap,annotate,scalesData,tempPolygons,baseGeoJsonGroup,NUTS2,NUTS3,listener,measureTooltipElement,measureTooltip,popupTextKPI,popupTextCount,customViz=this,container=document.getElementById("popup"),content=document.getElementById("popup-content"),closer=document.getElementById("popup-closer");function getMarkerData(){var e=customViz.getData();if(!e||!e.rows||!e.columns)return[];for(var t=[],n=0;n<e.rows.length;n++){e.rows[n];for(var o={},a=0;a<e.columns.length;a++){var r=e.columns[a],l=e.rows[n][a];o[r]=l}t.push(o)}return t}function createMap(){for(key in customViz.opts.birtOpts)"height"===key?$("#map").css("height",customViz.opts.birtOpts[key]):"width"===key&amp;&amp;$("#map").css("width",customViz.opts.birtOpts[key]);window.app={};var e=window.app;e.CustomToolbarControl=function(e){var t=e||{},n=document.createElement("div");n.className="row";var o=document.createElement("div");o.className="col-12";var a=document.createElement("button");a.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',a.id="zoomInButton",a.title="Zoom In",a.className="menuBtn";a.addEventListener("click",function(e){zoomIn()},!1),o.appendChild(a);var r=document.createElement("div");r.className="col-12";var l=document.createElement("button");l.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 13H5v-2h14v2z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',l.id="zoomInButton",l.title="Zoom In",l.className="menuBtn";l.addEventListener("click",function(e){zoomOut()},!1),r.appendChild(l);var i=document.createElement("div");i.className="col-12";var s=document.createElement("button");s.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"/><path d="M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37l-1.34-1.34c-.39-.39-1.02-.39-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41z"/></svg>',s.id="annotateButton",s.title="Annotate",s.className="menuBtn";s.addEventListener("click",function(e){$(this).hasClass("menuBtn_active")?($("#mapAreaButton").removeAttr("disabled"),$("#mapAreaButton img").css("filter","invert(0%)"),$("#mapAreaButton").css("cursor","pointer"),$("#mapDrawButton").removeAttr("disabled"),$("#mapDrawButton img").css("filter","invert(0%)"),$("#mapDrawButton").css("cursor","pointer"),map.removeInteraction(annotate),annotateMode=0,V.clear()):($("#mapAreaButton").attr("disabled","disabled"),$("#mapAreaButton img").css("filter","invert(50%)"),$("#mapAreaButton").css("cursor","not-allowed"),$("#mapDrawButton").attr("disabled","disabled"),$("#mapDrawButton img").css("filter","invert(50%)"),$("#mapDrawButton").css("cursor","not-allowed"),annotateMode=1,map.removeInteraction(annotate),(annotate=new ol.interaction.Draw({source:V,type:"LineString",freehand:!0})).on("drawstart",function(e){}),annotate.on("drawend",function(e){}),map.addInteraction(annotate)),$(this).toggleClass("menuBtn_active")},!1),i.appendChild(s);var c=document.createElement("div");c.className="col-12";var p=document.createElement("button");p.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"/><path d="M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"/></svg>',p.id="mapMenuButton",p.title="Map Layers",p.className="menuBtn";p.addEventListener("click",function(e){e.preventDefault(),$(this).toggleClass("menuBtn_active"),toggleMapMenu()},!1),c.appendChild(p);var m=document.createElement("div");m.className="col-12";var u=document.createElement("button");u.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',u.id="mapPrintButton",u.title="Print PDF",u.className="menuBtn";u.addEventListener("click",function(e){printMap()},!1),m.appendChild(u);var d=document.createElement("div");d.className="col-12";var h=document.createElement("button");h.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',h.id="mapDrawButton",h.title="Draw",h.className="menuBtn",h.style.height="55px";h.addEventListener("click",function(e){$(this).toggleClass("menuBtn_active"),$(this).hasClass("menuBtn_active")?($("#mapAreaButton").attr("disabled","disabled"),$("#mapAreaButton").css("cursor","not-allowed"),drawMode=1,map.removeInteraction(draw),map.removeInteraction(snap),addInteractions(),v.disabled=!1):($("#mapAreaButton").removeAttr("disabled"),$("#mapAreaButton").css("cursor","pointer"),map.removeInteraction(draw),map.removeInteraction(snap),drawMode=0,extractSource.clear(),measureTooltip.setPosition(void 0),mask&amp;&amp;extractLayer.removeFilter(mask),$("#intersectResults").remove(),v.disabled=!0)},!1);var g=["Polygon","Circle"],v=document.createElement("select");v.id="typeSelect",v.style.border="none",v.style.width="100%",v.disabled=!0,v.onchange=function(e){};for(var f=0;f<g.length;f++){(T=document.createElement("option")).value=g[f],T.text=g[f],v.appendChild(T)}d.appendChild(h),d.appendChild(v),n.appendChild(o),n.appendChild(r),n.appendChild(c),n.appendChild(m),n.appendChild(d),n.appendChild(i);var y=document.createElement("div");y.className="row";var w=document.createElement("div");w.className="col-12";var C=document.createElement("button");C.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"/><circle cx="7.2" cy="14.4" r="3.2"/><circle cx="14.8" cy="18" r="2"/><circle cx="15.2" cy="8.8" r="4.8"/></svg>',C.id="mapHeatmapButton",C.title="Heatmap",C.className="menuBtn";C.addEventListener("click",function(e){$(this).hasClass("menuBtn_active")?heatmapLayer.setVisible(!1):heatmapLayer.setVisible(!0),$(this).toggleClass("menuBtn_active")},!1),w.appendChild(C);var E=document.createElement("div");E.className="col-12";var S=document.createElement("button");S.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',S.id="mapClusterButton",S.title="Clusters",S.className="menuBtn";S.addEventListener("click",function(e){$(this).hasClass("menuBtn_active")?clusterLayer.setVisible(!1):clusterLayer.setVisible(!0),$(this).toggleClass("menuBtn_active")},!1),E.appendChild(S);var M=document.createElement("div");M.className="col-12";var b=document.createElement("button");b.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M3 3v18h18V3H3zm8 16H5v-6h6v6zm0-8H5V5h6v6zm8 8h-6v-6h6v6zm0-8h-6V5h6v6z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',b.id="mapAreaButton",b.title="Area",b.className="menuBtn",b.style.height="55px";b.addEventListener("click",function(e){var t=document.getElementById("polygonColourScale");$(this).hasClass("menuBtn_active")?($("#mapDrawButton").removeAttr("disabled"),$("#mapDrawButton img").css("filter","invert(0%)"),$("#mapDrawButton").css("cursor","pointer"),mask&amp;&amp;polygonLayer.removeFilter(mask),$("#intersectResults").remove(),$(t).hide(),polygonLayer.setVisible(!1),document.getElementById("areaSelect").disabled=!0,map.getLayers().forEach(function(e){e.get("title")&amp;&amp;-1!==e.get("title").toString().indexOf("NUTS")&amp;&amp;e.setVisible(!1)})):(shapes="",$("#mapDrawButton").attr("disabled","disabled"),$("#mapDrawButton img").css("filter","invert(50%)"),$("#mapDrawButton").css("cursor","not-allowed"),indexShapes(),polygonLayer.setVisible(!0),clusterLayer.setVisible(!1),S.className="menuBtn",heatmapLayer.setVisible(!1),C.className="menuBtn",document.getElementById("areaSelect").disabled=!1),$(this).toggleClass("menuBtn_active")},!1);var x=document.createElement("select");x.id="areaSelect",x.style.border="none",x.style.width="100%",x.disabled=!0,x.onchange=function(e){shapes="",mask&amp;&amp;polygonLayer.removeFilter(mask),$("#intersectResults").remove(),indexShapes()};for(f=0;f<baseGeoJsonGroup.length;f++){(T=document.createElement("option")).value=baseGeoJsonGroup[f].url,T.text=baseGeoJsonGroup[f].name,x.appendChild(T)}M.appendChild(b),M.appendChild(x);var L=document.createElement("div");L.className="col-12";var N=document.createElement("button");N.innerHTML='<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',N.id="mapBaseLayersButton",N.title="Base Layers",N.className="menuBtn menuBtn_active",N.style.height="55px";N.addEventListener("click",function(e){var n,t=A.getLayers(),o=$("#baseLayersSelect").val();osSelectionChecked=e.target.checked,$(this).hasClass("menuBtn_active")?(t.forEach(function(e,t){e.setVisible(!1)}),document.getElementById("baseLayersSelect").disabled=!0):(t.forEach(function(e,t){n=e.getProperties().title,o===n?e.setVisible(!0):e.setVisible(!1)}),document.getElementById("baseLayersSelect").disabled=!1),$(this).toggleClass("menuBtn_active")},!1);var P=A.getLayers().getArray(),k=document.createElement("select");k.id="baseLayersSelect",k.style.border="none",k.style.width="100%",k.onchange=function(e){for(var t=0;t<P.length;t++){P[t].get("title")===this.value?P[t].setVisible(!0):P[t].setVisible(!1)}};for(f=0;f<P.length;f++){var T;(T=document.createElement("option")).value=P[f].getProperties().title,T.text=P[f].getProperties().title,k.appendChild(T)}L.appendChild(N),L.appendChild(k),y.appendChild(L),y.appendChild(E),y.appendChild(w),y.appendChild(M);var B=document.createElement("div");B.className="list-group",B.id="mapMenuList";var H=document.createElement("div");H.className="ol-unselectable ol-mycontrol",B.appendChild(y),H.appendChild(n),H.appendChild(B),ol.control.Control.call(this,{element:H,target:t.target})},ol.inherits(e.CustomToolbarControl,ol.control.Control),mousePositionControl=new ol.control.MousePosition({coordinateFormat:ol.coordinate.createStringXY(4),projection:"EPSG:4326",className:"custom-mouse-position",target:document.getElementById("mouse-position"),undefinedHTML:"&amp;nbsp;"}),scaleLineControl=new ol.control.ScaleLine,baseGeoJsonGroup=[{name:"NUTS1",url:"https://opentext.mapcite.com/NUTS_Level_1_18.json-nuts118nm"},{name:"NUTS2",url:"https://opentext.mapcite.com/NUTS_Level_2_18.json-nuts218nm"},{name:"NUTS3",url:"https://opentext.mapcite.com/NUTS_Level_3_18.json-nuts318nm"}];for(var A=new ol.layer.Group({title:"Base maps",layers:[new ol.layer.Tile({title:"OSM",type:"base",visible:!1,source:new ol.source.OSM}),new ol.layer.Tile({title:"MONO",type:"base",visible:!1,source:new ol.source.Stamen({layer:"toner",crossOrigin:"anonymous"})}),new ol.layer.Tile({title:"LITE",type:"base",visible:!1,source:new ol.source.Stamen({layer:"toner-lite",crossOrigin:"anonymous"})}),new ol.layer.Tile({title:"LABELS",type:"base",visible:!1,source:new ol.source.Stamen({layer:"terrain-labels",crossOrigin:"anonymous"})})]}),t=new ol.control.Attribution({collapsible:!1,className:"custom-attribution"}),o=0;o<baseGeoJsonGroup.length;o++){var a=baseGeoJsonGroup[o].url.split("-");$.ajax({url:a[0],dataType:"json",async:!1,success:function(e){e.features[0].properties.hasOwnProperty("nuts318cd")?NUTS3=e:e.features[0].properties.hasOwnProperty("nuts218cd")?NUTS2=e:NUTS1=e}})}var r,l=getMarkerData();if(featureCollection={type:"FeatureCollection",features:[]},l&amp;&amp;0!=l.length)for(var i=0;i<l.length;i++)if(l[i].Longitude&amp;&amp;l[i].Latitude){var s={type:"Feature",properties:{name:"point_"+i,attributes:n={}},geometry:{type:"Point",coordinates:[+l[i].Longitude,+l[i].Latitude]}};for(key in l[i]){var c=l[i][key];n[key]=c,s.properties=n}featureCollection.features.push(s)}else{var p=lookupLatLon(l[i]);p&amp;&amp;featureCollection.features.push(p)}r=config.clusterMarkers?100:0,(index=supercluster({radius:r,maxZoom:20,initial:function(){return{count:0,sum:0,min:1/0,max:-1/0}},map:function(e){var t=config.kpiColumn;return{count:1,sum:Number(e[t]),min:Number(e[t]),max:Number(e[t]),max_alt:Number(e[t])}},reduce:function(e,t){e.sum+=Math.round(100*t.sum)/100,e.count+=t.count,e.min=Math.round(100*Math.min(e.min,t.min))/100,e.max=Math.round(100*Math.max(e.max,t.max))/100,e.avg=Math.round(100*e.sum/e.count)/100}})).load(featureCollection.features),clusterSource=new ol.source.Vector({crossOrigin:"anonymous",updateWhileAnimating:!0,updateWhileInteracting:!0,attributions:' <a href="http://www.mapcite.com" target="_blank"> Plugin by MAPCITE.</a>'});var m={};clusterLayer=new ol.layer.Vector({name:"clusters",source:clusterSource,style:function(e,t){var n,o,a=1e4<=(n=config.kpiColumn&amp;&amp;void 0!==config.kpiColumn?e.getProperties().sum:e.getProperties().count)?Math.round(n/1e3)+"k":1e3<=n?Math.round(n/100)/10+"k":n;return a&amp;&amp;(n=a),void 0===n&amp;&amp;(n=1),style=m[n],o=e.get(config.markerImageColumn)?e.get(config.markerImageColumn):"https://opentext.mapcite.com/images/features/Blue.png",style||(config.clusterMarkers?style=1===n?new ol.style.Style({image:new ol.style.Icon({crossOrigin:"anonymous",src:o})}):m[n]=new ol.style.Style({image:new ol.style.Circle({radius:18,stroke:new ol.style.Stroke({color:"rgba(0,0,0 1)",width:3}),fill:new ol.style.Fill({color:"rgba(0, 104, 255, 1)"})}),text:new ol.style.Text({text:n.toString(),fill:new ol.style.Fill({color:"#fff"})})}):style=new ol.style.Style({image:new ol.style.Icon({crossOrigin:"anonymous",src:o,height:32})})),[style]},visible:!1,zIndex:4}),heatmapLayer=new ol.layer.Heatmap({source:clusterSource,gradient:config.heatmapColours,blur:30,radius:30,weight:function(e){var t;if(config.kpiColumn&amp;&amp;void 0!==config.kpiColumn){t="sum";n=e.get("sum")}else{t="count";var n=e.get("count")}return n=convertValue(n,t)},visible:!1,zIndex:3}),overlay=new ol.Overlay({element:container,autoPan:!0,autoPanAnimation:{duration:250}}),polygonStyle=function(t,e){var n;for(var o in t.getProperties())-1!==o.indexOf("nm")&amp;&amp;(n=t.getProperties()[o]);if(config.kpiColumn&amp;&amp;void 0!==config.kpiColumn){var a=Math.max.apply(Math,scaleStops.filter(function(e){return e<=t.getProperties().KPI}));for(o=0;o<colorStops.length;o++)for(var r in colorStops[o])r===a.toString()&amp;&amp;(l=new ol.style.Style({stroke:new ol.style.Stroke({color:"black",width:2}),fill:new ol.style.Fill({color:colorStops[o][r]})}));return l}Math.max.apply(Math,scaleStops.filter(function(e){return e<=t.getProperties().Count}));for(var l,o=0;o<colorStops.length;o++)for(var r in colorStops[o])l=new ol.style.Style({stroke:new ol.style.Stroke({color:"black",width:2}),fill:new ol.style.Fill({color:"rgba(0, 118, 182, 0.9)"}),text:new ol.style.Text({fill:new ol.style.Fill({color:"#fff"}),text:n})});return l},polygonLayer=new ol.layer.Vector({name:"polygons",source:new ol.source.Vector({overlaps:!1,crossOrigin:"anonymous",attributions:' <a href="http://www.mapcite.com" target="_blank"> Plugin by MAPCITE.</a>'}),style:polygonStyle,visible:!1,zIndex:2}),annotateStyle=function(e,t){return aStyle=new ol.style.Style({stroke:new ol.style.Stroke({color:"black",width:4,lineCap:"round",lineJoin:"round"})}),aStyle};var V=new ol.source.Vector({wrapX:!1,crossOrigin:"anonymous",attributions:' <a href="http://www.mapcite.com" target="_blank"> Plugin by MAPCITE.</a>'}),u=new ol.layer.Vector({source:V,style:annotateStyle,zIndex:7});extractStyle=function(e,t){return eStyle=new ol.style.Style({stroke:new ol.style.Stroke({color:"black",width:2,lineCap:"round",lineJoin:"round"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0)"})}),eStyle},extractSource=new ol.source.Vector({wrapX:!1,crossOrigin:"anonymous",attributions:' <a href="http://www.mapcite.com" target="_blank"> Plugin by MAPCITE.</a>'}),extractLayer=new ol.layer.Vector({source:extractSource,style:extractStyle,zIndex:6}),(map=new ol.Map({layers:[A,polygonLayer,heatmapLayer,clusterLayer,extractLayer,u],overlays:[overlay],target:"map",controls:[],view:new ol.View({center:ol.proj.fromLonLat([config.mapCenter.lng,config.mapCenter.lat]),zoom:config.mapZoomLevel})})).addControl(new ol.control.ScaleLine({className:"custom-scale"})),map.addControl(t),map.addControl(mousePositionControl),map.addControl(new e.CustomToolbarControl),map.getView().on("change:resolution",function(){overlay.setPosition(void 0)});var d=function(e,t){var n;for(var o in e.getProperties())-1!==o.indexOf("nm")&amp;&amp;(n=e.getProperties()[o]);return new ol.style.Style({stroke:new ol.style.Stroke({color:"white",width:2}),fill:new ol.style.Fill({color:"rgba(217, 217, 217, 0.5)"}),text:new ol.style.Text({fill:new ol.style.Fill({color:"#000"}),text:n})})};for(o=0;o<baseGeoJsonGroup.length;o++){a=baseGeoJsonGroup[o].url.split("-");$.ajax({url:a[0],dataType:"json",async:!1,success:function(e){if(e.features[0].properties.hasOwnProperty("nuts318cd")){var t=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(e,{featureProjection:"EPSG:3857"})}),n=new ol.layer.Vector({title:"NUTS3",source:t,style:d,visible:!1,zIndex:1});map.addLayer(n)}else if(e.features[0].properties.hasOwnProperty("nuts218cd")){t=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(e,{featureProjection:"EPSG:3857"})}),n=new ol.layer.Vector({title:"NUTS2",source:t,style:d,visible:!1,zIndex:1});map.addLayer(n)}else{t=new ol.source.Vector({features:(new ol.format.GeoJSON).readFeatures(e,{featureProjection:"EPSG:3857"})}),n=new ol.layer.Vector({title:"NUTS1",source:t,style:d,visible:!1,zIndex:1});map.addLayer(n)}}})}document.getElementById("typeSelect").onchange=function(){map.removeInteraction(draw),addInteractions()},map.on("pointermove",function(e){if(1===drawMode||1===annotateMode);else{var t=map.forEachFeatureAtPixel(e.pixel,function(e,t){return t.get("name"),e});map.getTargetElement().style.cursor=t?"pointer":"auto",e.dragging&amp;&amp;(map.getTargetElement().style.cursor="move")}}),map.on("singleclick",function(o){if(overlay.setPosition(void 0),content.innerHTML="",1===drawMode||1===annotateMode);else{var a=[],r=[];map.forEachFeatureAtPixel(o.pixel,function(e,t){if("clusters"===t.get("name"))a.push(e);else if("polygons"===t.get("name")){var n;"MultiPolygon"===e.getGeometry().getType()?(n=turf.multiPolygon(e.getGeometry().getPolygons(),e.getProperties()),r.push(n)):polygonAnalysis(n=turf.polygon(e.getGeometry().getCoordinates(),e.getProperties())),map.setView(new ol.View({center:o.coordinate,zoom:map.getView().getZoom()}))}});if(0<r.length&amp;&amp;polygonAnalysis(r),0<a.length)if(popupTextCount=popupTextKPI=0,config.kpiColumn&amp;&amp;void 0!==config.kpiColumn)for(t=0;t<a.length;t++)if(!0===a[t].get("cluster"));else{if(a[t].getProperties(config.kpiColumn)){n=document.createElement("div");for(var e in n.className="featureAttributes",a[t].getProperties()){if(0<=config.markerLabelFields.indexOf(e)){i=document.createElement("p"),s=document.createElement("span"),c=document.createElement("span");if(isValidURL(a[t].getProperties()[e])){m=new Image,u=document.createElement("canvas").getContext("2d");m.onload=function(){u.drawImage(this,0,0)},m.crossOrigin="Anonymous",(p=new XMLHttpRequest).onload=function(){var e=new FileReader;e.onloadend=function(){m.src=e.result,i.appendChild(m)},e.readAsDataURL(p.response)},p.open("GET",a[t].getProperties()[e]),p.responseType="blob",p.send()}else s.innerHTML=e+": ",c.innerHTML=a[t].getProperties()[e],i.appendChild(s),i.appendChild(c);n.appendChild(i)}content.appendChild(n)}}d=o.coordinate;overlay.setPosition(d)}else for(var t=0;t<a.length;t++)if(!0===a[t].get("cluster"));else{var n=document.createElement("div");for(var l in n.className="featureAttributes",a[t].getProperties()){if(0<=config.markerLabelFields.indexOf(l)){var i=document.createElement("p"),s=document.createElement("span"),c=document.createElement("span");if(isValidURL(a[t].getProperties()[l])){var p,m=new Image,u=document.createElement("canvas").getContext("2d");m.onload=function(){u.drawImage(this,0,0)},m.crossOrigin="Anonymous",(p=new XMLHttpRequest).onload=function(){var e=new FileReader;e.onloadend=function(){m.src=e.result,i.appendChild(m)},e.readAsDataURL(p.response)},p.open("GET",a[t].getProperties()[l]),p.responseType="blob",p.send()}else s.innerHTML=l+": ",c.innerHTML=a[t].getProperties()[l],i.appendChild(s),i.appendChild(c);n.appendChild(i)}content.appendChild(n)}var d=o.coordinate;overlay.setPosition(d)}}}),map.on("moveend",update),!0===config.layers.markers?$("#mapClusterButton").trigger("click"):!0===config.layers.heatmap?$("#mapHeatmapButton").trigger("click"):!0===config.layers.shapes&amp;&amp;($("#mapAreaButton").trigger("click"),$("#mapMenuButton").trigger("click")),$("#baseLayersSelect").val(config.layers.base).trigger("change"),filterUpdate()}function filterUpdate(){var e=$("#container_NUTS3").text();SelectElement("areaSelect",e.substring(e.lastIndexOf("[")+1,e.lastIndexOf("]")).replace("CD",""))}function SelectElement(e,t){for(var n=document.getElementById(e),o=0;o<n.options.length;o++)if(n.options[o].text===t){n.selectedIndex=o,$("#areaSelect").trigger("change");break}}function addInteractions(){var o=typeSelect.value;"None"!==o&amp;&amp;(draw="Circle"!==o?new ol.interaction.Draw({source:extractSource,type:typeSelect.value,freehand:!0}):new ol.interaction.Draw({source:extractSource,features:features,type:"Circle",geometryFunction:function(e,t){t||(t=new ol.geom.Polygon(null));var n=e[0],o=e[1],a=n[0]-o[0],r=n[1]-o[1],l=Math.sqrt(a*a+r*r),i=ol.geom.Polygon.circular(new ol.Sphere(6378137),ol.proj.toLonLat(n),l);return i.transform("EPSG:4326","EPSG:3857"),t.setCoordinates(i.getCoordinates()),t}}),createMeasureTooltip(),draw.on("drawstart",function(e){measureTooltip.setPosition(void 0),extractSource.clear(),mask&amp;&amp;extractLayer.removeFilter(mask),listener=e.feature.getGeometry().on("change",function(e){var t=e.coordinate,n=e.target;t=n.getInteriorPoint().getCoordinates(),measureTooltipElement.innerHTML="Circle"!==o?""+formatArea(n):""+formatRadius(n),measureTooltip.setPosition(t)})}),draw.on("drawend",function(e){drawnPolygonAnalysis(turf.polygon(e.feature.getGeometry().getCoordinates())),map.getView().fit(e.feature.getGeometry().getExtent(),map.getSize());map.getView().getCenter();zoomOut(),mask=new ol.filter.Mask({feature:e.feature,inner:!1,fill:new ol.style.Fill({color:[0,0,0,.5]})}),extractLayer.addFilter(mask)}),map.addInteraction(draw),snap=new ol.interaction.Snap({source:extractSource}),map.addInteraction(snap))}var formatArea=function(e){var t=ol.Sphere.getArea(e);return 1e4<t?Math.round(t/1e6*100)/100+" km<sup>2</sup>":Math.round(100*t)/100+" m<sup>2</sup>"},formatRadius=function(e){var t=ol.proj.transform(e.getFirstCoordinate(),"EPSG:3857","EPSG:4326"),n=ol.proj.transform([e.getInteriorPoint().getCoordinates()[0],e.getInteriorPoint().getCoordinates()[1]],"EPSG:3857","EPSG:4326"),o=turf.point(t),a=turf.point(n),r=turf.distance(o,a);return Math.round(100*r)/100+" km"};function createMeasureTooltip(){measureTooltipElement&amp;&amp;measureTooltipElement.parentNode.removeChild(measureTooltipElement),(measureTooltipElement=document.createElement("div")).className="tooltip tooltip-measure",measureTooltip=new ol.Overlay({element:measureTooltipElement,offset:[0,0],positioning:"bottom-center"}),map.addOverlay(measureTooltip)}function update(){var e=ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()),"EPSG:3857","EPSG:4326");features=[],clusterArray=index.getClusters(e,map.getView().getZoom());for(var t=0;t<clusterArray.length;++t){var n=new ol.Feature({geometry:new ol.geom.Point(ol.proj.transform([clusterArray[t].geometry.coordinates[0],clusterArray[t].geometry.coordinates[1]],"EPSG:4326","EPSG:3857"))});n.setProperties(clusterArray[t].properties),features.push(n)}var o=clusterLayer.getSource();o.clear(),o.addFeatures(features)}function convertValue(e,t){e&amp;&amp;void 0!==e||(e=0);var n=ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()),"EPSG:3857","EPSG:4326"),o=turf.featureCollection(index.getClusters(n,Math.floor(map.getView().getZoom())));if("count"===t)var a=getFeatureDomain(o,"count");else a=getFeatureDomain(o,"sum");Array.max=function(e){return Math.max.apply(Math,e)};var r=Array.max(a);Array.min=function(e){return Math.min.apply(Math,e)};var l=Array.min(a);return config.heatmapAlt||!0===config.heatmapAlt?(xMax=0,xMin=1):(xMax=1,xMin=0),yMax=r,yMin=l,percent=(e-yMin)/(yMax-yMin),outputX=percent*(xMax-xMin)+xMin,outputX}function createColorStops(e,n){return stops=[],e.forEach(function(e){var t={};t[e]=n(e).alpha(.5).css(),stops.push(t)}),stops}function getFeatureDomain(e,n){var o=[];return"sum"===n||"count"===n?turf.propEach(e,function(e,t){e[n]&amp;&amp;o.push(Math.round(100*parseFloat(e[n])/100))}):"max"===n?turf.propEach(e,function(e,t){o.push(Number(e[n]))}):"min"===n?turf.propEach(e,function(e,t){o.push(Number(e[n]))}):n===config.kpiColumn?turf.propEach(e,function(e,t){o.push(Math.round(Number(e[n])))}):"test"===n&amp;&amp;turf.propEach(e,function(e,t){o.push(Math.round(Number("1")))}),o}var objectToCSVRow=function(e){var t=[];for(var n in e){var o=(null===e[n]?"":e[n].toString()).replace(/"/g,'""');o='"'+o+'"',t.push(o)}return t.join(" ")+"\r\n"};function printMap(){var e;e=$("#container___BIRT_ROOT")?"#container___BIRT_ROOT":"#dashboardBody",html2canvas(document.querySelector(e)).then(function(e){dataUrl=e.toDataURL("image/jpeg"),printJS(dataUrl,"image")})}function indexShapes(){if(shapes);else{polygonLayer.getSource().clear(),document.getElementById("polygonColourScale")&amp;&amp;(element=document.getElementById("polygonColourScale"),element.parentNode.removeChild(element)),$(".modal-dialog").css("display","block"),map.getLayers().forEach(function(e){e.get("title")&amp;&amp;-1!==e.get("title").toString().indexOf("NUTS")&amp;&amp;e.setVisible(!1)}),"NUTS3"===$("#areaSelect>option:selected").text()?(shapes=NUTS3,map.getLayers().forEach(function(e){"NUTS2"===e.get("title")&amp;&amp;e.setVisible(!0)})):"NUTS2"===$("#areaSelect>option:selected").text()?(shapes=NUTS2,map.getLayers().forEach(function(e){"NUTS1"===e.get("title")&amp;&amp;e.setVisible(!0)})):(shapes=NUTS1,map.getLayers().forEach(function(e){"NUTS1"===e.get("title")&amp;&amp;e.setVisible(!0)})),map.getLayers().forEach(function(e){e.get("name")});for(var e=new ol.source.Vector,t=0;t<shapes.features.length;t++){var n=(new ol.format.GeoJSON).readFeature(shapes.features[t],{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"});e.addFeature(n)}var o=ol.proj.transformExtent(e.getExtent(),"EPSG:3857","EPSG:4326"),a=[],r=index.getClusters(o,22);if(6e4<r.length){$(".modal-dialog div").html('<h3>Data volume too high</h3><p>Please filter data</p><a href="#" id="closeDialog">Close</a>')}else{for(var l=0;l<r.length;++l){var i=turf.point([r[l].geometry.coordinates[0],r[l].geometry.coordinates[1]],r[l].properties);a.push(i)}shapeStyle(turf.featureCollection(a))}}}function indexParentShapes(e){for(var t=turf.polygon(e[0].getGeometry().getCoordinates(),e[0].getProperties()),n=0;n<NUTS3.features.length;n++){var o=ol.proj.transform([NUTS3.features[n].properties.long,NUTS3.features[n].properties.lat],"EPSG:4326","EPSG:3857"),a=turf.point(o);if(turf.booleanContains(t,a)){var r=e[0].getProperties().withinPolygon;processPolygon(NUTS3.features[n],r)}}}function shapeStyle(l){scalesData=[],tempPolygons=[];var i=shapes.features.length-1,s=new this.RepeatingOperation(function(){if(0===l.features.length||processPolygon(shapes.features[i],l),0<=--i)s.step();else{polygonLayer.getSource().clear();for(var e=0;e<tempPolygons.length;e++)0<tempPolygons[e].getProperties().withinPolygon.features.length&amp;&amp;polygonLayer.getSource().addFeature(tempPolygons[e]);scaleStops=chroma.limits(scalesData,"e",6);var t=chroma.scale(config.shapeColours).domain(scaleStops);colorStops=createColorStops(scaleStops,t);var n=document.createElement("ul");n.id="polygonColourScale",n.style="display:none;",n.className="list-group",n.innerHTML="";for(var o=0;o<colorStops.length;o++)for(var a in colorStops[o]){var r=document.createElement("li");r.className="list-group-item-colour",r.style.backgroundColor=colorStops[o][a],r.innerHTML=numberWithCommas(Number(a).toFixed(0)),n.appendChild(r)}$(".modal-dialog").css("display","none")}},10);s.step()}function processPolygon(e,t){if("MultiPolygon"===e.geometry.type){var n=turf.multiPolygon(e.geometry.coordinates),o=turf.featureCollection([n]),a=turf.within(t,o);if(config.kpiColumn&amp;&amp;void 0!==config.kpiColumn){r=[getFeatureDomain(a,config.kpiColumn).reduce(add,0)];Array.prototype.push.apply(scalesData,r),(i=(new ol.format.GeoJSON).readFeature(e,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})).set("KPI",getFeatureDomain(a,config.kpiColumn).reduce(add,0)),i.set("withinPolygon",a)}else{var r=[getFeatureDomain(a,"test").reduce(add,0)];Array.prototype.push.apply(scalesData,r),(i=(new ol.format.GeoJSON).readFeature(e,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})).set("Count",getFeatureDomain(a,"test").reduce(add,0)),i.set("withinPolygon",a)}tempPolygons.push(i)}else if("Polygon"===e.geometry.type){var l=turf.polygon(e.geometry.coordinates);o=turf.featureCollection([l]),a=turf.within(t,o);if(config.kpiColumn&amp;&amp;void 0!==config.kpiColumn){r=[getFeatureDomain(a,config.kpiColumn).reduce(add,0)];Array.prototype.push.apply(scalesData,r),(i=(new ol.format.GeoJSON).readFeature(e,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})).set("KPI",getFeatureDomain(a,config.kpiColumn).reduce(add,0)),i.set("withinPolygon",a)}else{var i,r=[getFeatureDomain(a,"test").reduce(add,0)];Array.prototype.push.apply(scalesData,r),(i=(new ol.format.GeoJSON).readFeature(e,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})).set("Count",getFeatureDomain(a,"test").reduce(add,0)),i.set("withinPolygon",a)}tempPolygons.push(i)}}function polygonAnalysis(e){var t,n,o=[],a=$("#areaSelect").val();a.toString();var r=a.split("-");if($("#intersectResults").remove(),0<e.length){for(B=0;B<e.length;B++)o.push(e[B].properties.withinPolygon.features);t=[].concat.apply([],o),n=e[0].properties[r[1]]}else t=e.properties.withinPolygon.features,n=e.properties[r[1]];var l,s,c=[],p=[],m=0;if(config.kpiColumn&amp;&amp;void 0!==config.kpiColumn){if(0<t.length){for(T=0;T<t.length;T++)m+=Number(t[T].properties[config.kpiColumn]),p.push(Number(t[T].properties[config.kpiColumn]));l=Math.max.apply(null,p),s=Math.min.apply(null,p)}N=(u=m)/t.length;for(d=Math.max.apply(null,[l]),h=Math.min.apply(null,[s]),(g=document.createElement("div")).id="intersectResults",g.className="intersectsDiv",document.createElement("div").className="intersectsSubDiv",(v=document.createElement("div")).className="row",(f=document.createElement("div")).className="col-12",(y=document.createElement("h3")).innerHTML=n,f.appendChild(y),(w=document.createElement("div")).className="col-12",(E=document.createElement("div")).className="col-6",E.innerHTML="<h4> kpi </h4><h3>"+config.kpiColumn+"</h3>",w.appendChild(E),(S=document.createElement("div")).className="col-6",S.innerHTML="<h4> locations </h4><h3>"+numberWithCommas(t.length)+"</h3>",w.appendChild(S),(C=document.createElement("div")).className="col-12",(E=document.createElement("div")).className="col-6",E.innerHTML="<h4> sum </h4><h3>"+numberWithCommas(u)+"</h3>",C.appendChild(E),(S=document.createElement("div")).className="col-6",S.innerHTML="<h4> max </h4><h3>"+numberWithCommas(d)+"</h3>",C.appendChild(S),(M=document.createElement("div")).className="col-12",(b=document.createElement("div")).className="col-6",b.innerHTML="<h4> min </h4><h3>"+numberWithCommas(h)+"</h3>",M.appendChild(b),(x=document.createElement("div")).className="col-6",x.innerHTML="<h4> avg. </h4><h3>"+N.toFixed(2)+"</h3>",M.appendChild(x),(L=document.createElement("div")).className="col-12",i=0;i<t.length;i++){P=t[i];csvItem=P.properties,c.push(csvItem)}T="data:text/csv;charset=utf-8,",B=customViz.getData();T+=objectToCSVRow(B.columns),c.forEach(function(e){T+=objectToCSVRow(e)}),(k=document.createElement("div")).className="col-6";I=encodeURI(T);(H=document.createElement("a")).innerHTML='<h4> download </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',H.id="downloadLink",H.title="Download",H.className="menuBtn downloadLink",H.setAttribute("href",I),H.setAttribute("download","mapcite_report.csv"),k.appendChild(H),L.appendChild(k),(A=document.createElement("div")).className="col-6",(V=document.createElement("a")).innerHTML='<h4> close </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',V.id="closeLink",V.title="Close",V.className="menuBtn closeLink",V.setAttribute("href","#"),A.appendChild(V),L.appendChild(A),f.appendChild(w),f.appendChild(C),f.appendChild(M),f.appendChild(L),v.appendChild(f),g.appendChild(v)}else{if(0<t.length){for(T=0;T<t.length;T++)m+=Number(t[T].properties[config.kpiColumn]),p.push(Number(t[T].properties[config.kpiColumn]));l=Math.max.apply(null,p),s=Math.min.apply(null,p)}var u,d,h,g,v,f,y,w,C,E,S,M,b,x,L,N=(u=m)/t.length;for(d=Math.max.apply(null,[l]),h=Math.min.apply(null,[s]),(g=document.createElement("div")).id="intersectResults",g.className="intersectsDiv",document.createElement("div").className="intersectsSubDiv",(v=document.createElement("div")).className="row",(f=document.createElement("div")).className="col-12",(y=document.createElement("h3")).innerHTML=n,f.appendChild(y),(w=document.createElement("div")).className="col-12",(E=document.createElement("div")).className="col-6",E.innerHTML="<h4> kpi </h4><h3>N/A</h3>",w.appendChild(E),(S=document.createElement("div")).className="col-6",S.innerHTML="<h4> locations </h4><h3>"+numberWithCommas(t.length)+"</h3>",w.appendChild(S),(C=document.createElement("div")).className="col-12",(E=document.createElement("div")).className="col-6",E.innerHTML="<h4> sum </h4><h3>N/A</h3>",C.appendChild(E),(S=document.createElement("div")).className="col-6",S.innerHTML="<h4> max </h4><h3>N/A</h3>",C.appendChild(S),(M=document.createElement("div")).className="col-12",(b=document.createElement("div")).className="col-6",b.innerHTML="<h4> min </h4><h3>N/A</h3>",M.appendChild(b),(x=document.createElement("div")).className="col-6",x.innerHTML="<h4> avg. </h4><h3>N/A</h3>",M.appendChild(x),(L=document.createElement("div")).className="col-12",i=0;i<t.length;i++){var P=t[i];csvItem=P.properties,c.push(csvItem)}var k,T="data:text/csv;charset=utf-8,",B=customViz.getData();T+=objectToCSVRow(B.columns),c.forEach(function(e){T+=objectToCSVRow(e)}),(k=document.createElement("div")).className="col-6";var H,A,V,I=encodeURI(T);(H=document.createElement("a")).innerHTML='<h4> download </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',H.id="downloadLink",H.title="Download",H.className="menuBtn downloadLink",H.setAttribute("href",I),H.setAttribute("download","mapcite_report.csv"),k.appendChild(H),L.appendChild(k),(A=document.createElement("div")).className="col-6",(V=document.createElement("a")).innerHTML='<h4> close </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',V.id="closeLink",V.title="Close",V.className="menuBtn closeLink",V.setAttribute("href","#"),A.appendChild(V),L.appendChild(A),f.appendChild(w),f.appendChild(C),f.appendChild(M),f.appendChild(L),v.appendChild(f),g.appendChild(v)}$("#map").append(g)}function drawnPolygonAnalysis(e){$("#intersectResults").remove();var t=[],n=clusterSource.getFeatures(),o=[];for(i=0;i<n.length;i++){queryPoint=turf.point(n[i].getGeometry().getCoordinates(),n[i].getProperties()),turf.inside(queryPoint,e)&amp;&amp;o.push(queryPoint)}if(0<o.length){var a,l=[],s=[],c=[];for(j=0;j<o.length;j++)if(config.kpiColumn in o[j].properties)c.push(o[j]),s.push(o[j]);else{l.push(o[j]);var p=o[j].properties.cluster_id;p?(a=index.getLeaves(p,Math.floor(map.getView().getZoom()),limit=1/0),Array.prototype.push.apply(s,a)):(c.push(o[j]),s.push(o[j]))}var m,u,d=[],h=0;if(0<c.length){for(R=0;R<c.length;R++)h+=Number(c[R].properties[config.kpiColumn]),d.push(Number(c[R].properties[config.kpiColumn]));m=Math.max.apply(null,d),u=Math.min.apply(null,d)}var g,v,f=0,y=0;0<l.length&amp;&amp;(clusterData=turf.featureCollection(l),f=getFeatureDomain(clusterData,"sum").reduce(add,0),g=Math.max.apply(null,getFeatureDomain(clusterData,"max")),v=Math.max.apply(null,getFeatureDomain(clusterData,"min")),y=getFeatureDomain(clusterData,"count").reduce(add,0));var w,C,E=h+f,S=E/(y+c.length);C=m&amp;&amp;u?g&amp;&amp;g?(w=Math.max.apply(null,[g,m]),Math.min.apply(null,[v,u])):(w=Math.max.apply(null,[m]),Math.min.apply(null,[u])):(w=Math.max.apply(null,[g]),Math.min.apply(null,[v]));var M=document.createElement("div");M.id="intersectResults",M.className="intersectsDiv",document.createElement("div").className="intersectsSubDiv";var b=document.createElement("div");b.className="row";var x=document.createElement("div");x.className="col-12";var L=document.createElement("div");L.className="col-12",(N=document.createElement("div")).className="col-6",N.innerHTML="<h4> kpi </h4><h3>"+config.kpiColumn+"</h3>",L.appendChild(N),(P=document.createElement("div")).className="col-6",P.innerHTML="<h4> locations </h4><h3>"+numberWithCommas(y+c.length)+"</h3>",L.appendChild(P);var N,P,k=document.createElement("div");k.className="col-12",(N=document.createElement("div")).className="col-6",N.innerHTML="<h4> sum </h4><h3>"+numberWithCommas(E)+"</h3>",k.appendChild(N),(P=document.createElement("div")).className="col-6",P.innerHTML="<h4> max </h4><h3>"+numberWithCommas(w)+"</h3>",k.appendChild(P);var T=document.createElement("div");T.className="col-12";var B=document.createElement("div");B.className="col-6",B.innerHTML="<h4> min </h4><h3>"+numberWithCommas(C)+"</h3>",T.appendChild(B);var H=document.createElement("div");H.className="col-6",H.innerHTML="<h4> avg. </h4><h3>"+S.toFixed(2)+"</h3>",T.appendChild(H);var A=document.createElement("div");A.className="col-12";var V=document.createElement("div");V.className="col-12";var I=document.createElement("h4");I.innerHTML="data preview",V.appendChild(I);var z=document.createElement("table");r=document.createElement("tbody"),z.appendChild(r);var D=document.createElement("tr");D.className="intersectsTableHeaderRow";var G=s[0];for(key in G.properties)if(G.properties.hasOwnProperty(key)&amp;&amp;"geometry"!=key&amp;&amp;"Latitude"!=key&amp;&amp;"Longitude"!=key&amp;&amp;"Image"!=key){var F=document.createElement("th");F.innerHTML=key,D.appendChild(F)}for(r.appendChild(D),i=0;i<s.length;i++)if(100<i);else{var O=document.createElement("tr");O.className="intersectsTableRow";var _=s[i];for(key in _.properties)if(_.properties.hasOwnProperty(key)&amp;&amp;"geometry"!=key&amp;&amp;"Latitude"!=key&amp;&amp;"Longitude"!=key&amp;&amp;"Image"!=key){var U=document.createElement("td");U.innerHTML=_.properties[key],O.appendChild(U)}r.appendChild(O),csvItem=_.properties,t.push(csvItem)}var R="data:text/csv;charset=utf-8,",J=customViz.getData();R+=objectToCSVRow(J.columns),t.forEach(function(e){R+=objectToCSVRow(e)}),V.appendChild(z);var Z=document.createElement("div");Z.className="col-6";var W=encodeURI(R),q=document.createElement("a");q.innerHTML='<h4> download </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',q.id="downloadLink",q.title="Download",q.className="menuBtn downloadLink",q.setAttribute("href",W),q.setAttribute("download","mapcite_report.csv"),Z.appendChild(q),A.appendChild(Z);var X=document.createElement("div");X.className="col-6";var K=document.createElement("a");K.innerHTML='<h4> close </h4><svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',K.id="closeLink",K.title="Close",K.className="menuBtn closeLink",K.setAttribute("href","#"),X.appendChild(K),A.appendChild(X),A.appendChild(V),x.appendChild(L),x.appendChild(k),x.appendChild(T),x.appendChild(A),b.appendChild(x),M.appendChild(b),$("#map").append(M)}}RepeatingOperation=function(e,t){var n=0;this.step=function(){if(++n>=t)return n=0,void setTimeout(function(){e()},1,[]);e()}};var getJson=function(e,t,n){if(t&amp;&amp;"object"==typeof t){var o="",a=encodeURIComponent;for(x in t)o+="&amp;"+a(x)+"="+a(t[x]);t=o.slice(1),e+=(/\?/.test(e)?"&amp;":"?")+t}var r=new XMLHttpRequest;r.open("GET",e,!0),r.setRequestHeader("Accept","application/json, text/javascript"),r.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),r.onreadystatechange=function(){4==r.readyState&amp;&amp;(200==r.status||304==r.status?n(JSON.parse(r.response)):n(""))},r.send(null)};function zoomIn(){var e=map.getView().getZoom();map.getView().setZoom(e+1)}function zoomOut(){var e=map.getView().getZoom();map.getView().setZoom(e-1)}function toggleMapMenu(){$("#mapMenuList").hasClass("mapMenuList_active")?($("#mapMenuButton").attr("disabled","disabled"),$("#mapMenuList").stop().animate({opacity:0,left:"-=350"},350,function(){$("#mapMenuList").removeClass("mapMenuList_active").addClass("mapMenu"),$("#mapMenuButton").removeAttr("disabled")})):($("#mapMenuButton").attr("disabled","disabled"),$("#mapMenuList").stop().animate({opacity:1,left:"+=350"},350,function(){$("#mapMenuList").removeClass("mapMenuList").addClass("mapMenuList_active"),$("#mapMenuButton").removeAttr("disabled")}))}function numberWithCommas(e){return(e+="").replace(new RegExp("\\B(?=(\\d{3})+"+(~e.indexOf(".")?"\\.":"$")+")","g"),",")}function add(e,t){return e+t}function isValidURL(e){return null!=e.toString().match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&amp;//=]*)/g)}function lookupLatLon(t){var e,o=NUTS3.features.find(function(e){return e.properties.nuts318nm===t.NUTS3NM});if(o)for(key in e={type:"Feature",properties:{name:"point_0",attributes:n={}},geometry:{type:"Point",coordinates:[o.properties.long,o.properties.lat]}},t){var a=t[key];n[key]=a,e.properties=n}return e}$(document).on("click","#closeLink",function(){$("#intersectResults").remove()}),$(document).on("click","#closeDialog",function(){$(".modal-dialog").css("display","none");$(".modal-dialog div").html("<h2>Please wait...</h2><p>calculating and indexing shapes can take a little while</p>"),$("#mapDrawButton").removeAttr("disabled"),$("#mapDrawButton img").css("filter","invert(0%)"),$("#mapDrawButton").css("cursor","pointer"),$("#mapAreaButton").removeAttr("disabled"),$("#mapAreaButton img").css("filter","invert(0%)"),$("#mapAreaButton").css("cursor","pointer"),$("#mapAreaButton").toggleClass("menuBtn_active"),shapes=""}),closer.onclick=function(){return overlay.setPosition(void 0),!1},$(window).trigger("resize"),head.load("https://opentext.mapcite.com/Styles/ol.css","https://opentext.mapcite.com/scripts/ol.js","https://opentext.mapcite.com/scripts/filter.js","https://opentext.mapcite.com/scripts/maskfilter.js","https://opentext.mapcite.com/scripts/FileSaver.min.js","https://opentext.mapcite.com/scripts/supercluster.js","https://opentext.mapcite.com/scripts/turf.js","https://opentext.mapcite.com/scripts/html2canvas.js","https://opentext.mapcite.com/scripts/print.js","https://opentext.mapcite.com/scripts/chroma.js",createMap);]]></method>
                                    <property name="groups">
                                        <data-group>
                                            <property name="groupName">ZActualG</property>
                                            <expression name="keyExpr" type="javascript">data["Zone Actual"]</expression>
                                            <property name="interval">none</property>
                                            <property name="sortDirection">asc</property>
                                        </data-group>
                                    </property>
                                    <list-property name="filter">
                                        <structure>
                                            <expression name="expr" type="javascript">row["Location"]</expression>
                                            <property name="dynamicFilterParameter">LocationP</property>
                                            <property name="updateAggregation">true</property>
                                        </structure>
                                    </list-property>
                                    <property name="summaryData">true</property>
                                    <property name="height">564px</property>
                                    <property name="width">11.6in</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">Aggregation</property>
                                            <property name="dataType">float</property>
                                            <simple-property-list name="aggregateOn">
                                                <value>Sub LocationG</value>
                                            </simple-property-list>
                                            <property name="aggregateFunction">SUM</property>
                                            <list-property name="arguments">
                                                <structure>
                                                    <property name="name">Expression</property>
                                                    <expression name="value" type="javascript">row["Count"]</expression>
                                                </structure>
                                            </list-property>
                                            <property name="allowExport">true</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Date Time</property>
                                            <text-property name="displayName">Date Time</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Date Time"]</expression>
                                            <property name="dataType">date-time</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Date</property>
                                            <text-property name="displayName">Date</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Date"]</expression>
                                            <property name="dataType">date</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Time</property>
                                            <text-property name="displayName">Time</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Time"]</expression>
                                            <property name="dataType">time</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Container ID</property>
                                            <text-property name="displayName">Container ID</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Container ID"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Container Type</property>
                                            <text-property name="displayName">Container Type</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Container Type"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Temp Sensitive</property>
                                            <text-property name="displayName">Temp Sensitive</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Temp Sensitive"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Temp Range</property>
                                            <text-property name="displayName">Temp Range</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Temp Range"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Zone expected</property>
                                            <text-property name="displayName">Zone expected</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Zone expected"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Zone Actual</property>
                                            <text-property name="displayName">Zone Actual</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Zone Actual"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Sub Location</property>
                                            <text-property name="displayName">Sub Location</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Sub Location"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Location</property>
                                            <text-property name="displayName">Location</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Location"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Latitude</property>
                                            <text-property name="displayName">Latitude</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Latitude"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Longitude</property>
                                            <text-property name="displayName">Longitude</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Longitude"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Temp icon</property>
                                            <text-property name="displayName">Temp icon</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Temp icon"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Container icon</property>
                                            <text-property name="displayName">Container icon</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Container icon"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Count</property>
                                            <text-property name="displayName">Count</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Count"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MapText</property>
                                            <text-property name="displayName">MapText</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MapText"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Light Level</property>
                                            <text-property name="displayName">Light Level</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Light Level"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Temprature</property>
                                            <text-property name="displayName">Temprature</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Temprature"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Bulb</property>
                                            <text-property name="displayName">Bulb</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Bulb"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MapContainerIcon</property>
                                            <text-property name="displayName">MapContainerIcon</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MapContainerIcon"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <property name="linkedDataModel">Container Data Model</property>
                                </extended-item>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="1833">
                    <property name="colSpan">1</property>
                    <property name="rowSpan">2</property>
                    <grid id="1905">
                        <property name="height">8.175in</property>
                        <column id="1906"/>
                        <row id="1907">
                            <property name="height">90px</property>
                            <cell id="1908">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingLeft">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="paddingRight">5pt</property>
                                <grid id="1919">
                                    <property name="backgroundColor">white</property>
                                    <property name="borderBottomColor">#E6E9ED</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftColor">#E6E9ED</property>
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">thin</property>
                                    <property name="borderRightColor">#E6E9ED</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">thin</property>
                                    <property name="borderTopColor">#E6E9ED</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <property name="height">1.5916666666666666in</property>
                                    <column id="1920"/>
                                    <column id="1921"/>
                                    <row id="1922">
                                        <cell id="1923">
                                            <property name="colSpan">2</property>
                                            <property name="rowSpan">1</property>
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">medium</property>
                                            <label id="1935">
                                                <property name="fontSize">14pt</property>
                                                <property name="paddingTop">5pt</property>
                                                <property name="paddingLeft">3pt</property>
                                                <property name="paddingBottom">5pt</property>
                                                <text-property name="text" key="Containers in Transit">Containers in Transit</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1925">
                                        <cell id="1926">
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingLeft">5pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">5pt</property>
                                            <extended-item extensionName="HTMLControl" id="1913">
                                                <method name="clientOnCreate"><![CDATA[var config = {
 	idColumn : "ID",
	valueColumn : "VALUE",
	valueMaxColumn : "MAX",
	colorColumn : "COLOR"
};

// set precision here
// if none, default value
var nbDec = 0;

// Read data set 
var cursor = this.getDataCursor();
var rowId = [];
var rowValue = [];
var rowMax = [];
var rowColor = [];

while (cursor.hasNext()) {
	var rowData = cursor.next();
	rowId.push(rowData[config.idColumn]);
	rowValue.push(rowData[config.valueColumn]);
	rowMax.push(rowData[config.valueMaxColumn]);
	rowColor.push(rowData[config.colorColumn]);
};

var customViz = this;
	
var callback = function() {
	var containerId = customViz.getId();
	myDiv = '<div style="position:relative">';
	myDiv += '<canvas id="' + rowId[0] + '" class="canvas_gauge" style="width:200px;height:100px;position:absolute;left:-50px"></canvas>';
	myDiv += '<span id="' + rowId[0] + '-lib" style="width:200px;position:absolute;left:-50px;text-align:center;top:25px;font-size:40px"></span>';
	myDiv += '</div>';
	$('#' + containerId).append(myDiv);
		
	var opts = {
  		lines: 1, // The number of lines to draw
  		angle: 0.2, // The length of each line
  		lineWidth: 0.1, // The line thickness
  		pointer: {
    		length: 0.9, // The radius of the inner circle
    		strokeWidth: 0.035, // The rotation offset
		},
  		limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
  		colorStop: rowColor[0],
  		strokeColor: '#F0F3F3',   // to see which ones work best for you
  		generateGradient: true,
	};

	var CustomTextRenderer = function(el){
    	this.el = el;
    	this.render = function(gauge){
        	this.el.innerHTML = gauge.displayedValue.toFixed(nbDec);
    	}
	}
	CustomTextRenderer.prototype = new TextRenderer();

	var target = document.getElementById(rowId[0]); // your canvas element
	var gauge = new Donut(target).setOptions(opts); // create sexy gauge!
	gauge.maxValue = rowMax[0],
	gauge.animationSpeed = 15; // set animation speed (32 is default value)
	gauge.set(rowValue[0]); // set actual value
	gauge.setTextField(new CustomTextRenderer(document.getElementById(rowId[0] + "-lib")));

}

head.load(this.getBirtResourceURL('js/gauge.js'), callback);
]]></method>
                                                <list-property name="filter">
                                                    <structure>
                                                        <property name="operator">eq</property>
                                                        <expression name="expr" type="javascript">row["ID"]</expression>
                                                        <simple-property-list name="value1">
                                                            <value>"Gauge1"</value>
                                                        </simple-property-list>
                                                        <property name="updateAggregation">true</property>
                                                    </structure>
                                                </list-property>
                                                <property name="height">90px</property>
                                                <property name="width">100%</property>
                                                <property name="dataSet">Gauge</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">ID</property>
                                                        <text-property name="displayName">ID</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["ID"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">VALUE</property>
                                                        <text-property name="displayName">VALUE</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["VALUE"]</expression>
                                                        <property name="dataType">float</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">MAX</property>
                                                        <text-property name="displayName">MAX</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["MAX"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">COLOR</property>
                                                        <text-property name="displayName">COLOR</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["COLOR"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                            </extended-item>
                                        </cell>
                                        <cell id="1927">
                                            <grid id="1929">
                                                <property name="height">100px</property>
                                                <column id="1930"/>
                                                <row id="1931">
                                                    <property name="verticalAlign">middle</property>
                                                    <cell id="1932">
                                                        <label id="1928">
                                                            <property name="fontSize">14pt</property>
                                                            <property name="paddingTop">5pt</property>
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="paddingBottom">5pt</property>
                                                            <text-property name="text">Actual Vs Delay</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                                <row id="1933">
                                                    <property name="verticalAlign">bottom</property>
                                                    <cell id="1934">
                                                        <image id="369">
                                                            <property name="display">inline</property>
                                                            <property name="height">0.08403361344537816in</property>
                                                            <property name="width">0.1092436974789916in</property>
                                                            <property name="source">file</property>
                                                            <expression name="uri" type="constant">images/arrow down green.png</expression>
                                                        </image>
                                                        <text id="72">
                                                            <property name="style">kpi_green</property>
                                                            <property name="display">inline</property>
                                                            <property name="contentType">html</property>
                                                            <text-property name="content"><![CDATA[ 4 %]]></text-property>
                                                        </text>
                                                        <label id="73">
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="display">inline</property>
                                                            <text-property name="text" key="Decrease vs last year">Decrease vs last year</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </grid>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                        <row id="1909">
                            <property name="height">90px</property>
                            <cell id="1910">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingLeft">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="paddingRight">5pt</property>
                                <grid id="1936">
                                    <property name="backgroundColor">white</property>
                                    <property name="borderBottomColor">#E6E9ED</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftColor">#E6E9ED</property>
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">thin</property>
                                    <property name="borderRightColor">#E6E9ED</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">thin</property>
                                    <property name="borderTopColor">#E6E9ED</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <property name="width">2.591666666666667in</property>
                                    <column id="1937">
                                        <property name="width">141px</property>
                                    </column>
                                    <column id="1938">
                                        <property name="width">170px</property>
                                    </column>
                                    <row id="1939">
                                        <cell id="1940">
                                            <property name="colSpan">2</property>
                                            <property name="rowSpan">1</property>
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">medium</property>
                                            <label id="1941">
                                                <property name="fontSize">14pt</property>
                                                <property name="paddingTop">5pt</property>
                                                <property name="paddingLeft">3pt</property>
                                                <property name="paddingBottom">5pt</property>
                                                <text-property name="text" key="Maintenance down Time">Maintenance down Time</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1942">
                                        <cell id="1943">
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingLeft">5pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">5pt</property>
                                            <extended-item extensionName="HTMLControl" id="1944">
                                                <method name="clientOnCreate"><![CDATA[var config = {
 	idColumn : "ID",
	valueColumn : "VALUE",
	valueMaxColumn : "MAX",
	colorColumn : "COLOR"
};

// set precision here
// if none, default value
var nbDec = 0;

// Read data set 
var cursor = this.getDataCursor();
var rowId = [];
var rowValue = [];
var rowMax = [];
var rowColor = [];

while (cursor.hasNext()) {
	var rowData = cursor.next();
	rowId.push(rowData[config.idColumn]);
	rowValue.push(rowData[config.valueColumn]);
	rowMax.push(rowData[config.valueMaxColumn]);
	rowColor.push(rowData[config.colorColumn]);
};

var customViz = this;
	
var callback = function() {
	debugger;
	var containerId = customViz.getId();
	myDiv = '<div style="position:relative">';
	myDiv += '<canvas id="' + rowId[0] + '" class="canvas_gauge" style="width:200px;height:100px;position:absolute;left:-50px"></canvas>';
	myDiv += '<span id="' + rowId[0] + '-lib" style="width:200px;position:absolute;left:-50px;text-align:center;top:25px;font-size:40px"></span>';
	myDiv += '</div>';
	$('#' + containerId).append(myDiv);
		
	var opts = {
  		lines: 1, // The number of lines to draw
  		angle: 0.2, // The length of each line
  		lineWidth: 0.1, // The line thickness
  		pointer: {
    		length: 0.9, // The radius of the inner circle
    		strokeWidth: 0.035, // The rotation offset
		},
  		limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
  		colorStop: rowColor[0],
  		strokeColor: '#F0F3F3',   // to see which ones work best for you
  		generateGradient: true,
	};

	var CustomTextRenderer = function(el){
    	this.el = el;
    	this.render = function(gauge){
    		debugger;
        	this.el.innerHTML = gauge.displayedValue.toFixed(nbDec);
    	}
	}
	CustomTextRenderer.prototype = new TextRenderer();

	var target = document.getElementById(rowId[0]); // your canvas element
	var gauge = new Donut(target).setOptions(opts); // create sexy gauge!
	gauge.maxValue = rowMax[0],
	gauge.animationSpeed = 15; // set animation speed (32 is default value)
	gauge.set(rowValue[0]); // set actual value
	gauge.setTextField(new CustomTextRenderer(document.getElementById(rowId[0] + "-lib")));

}

head.load(this.getBirtResourceURL('js/gauge.js'), callback);
]]></method>
                                                <list-property name="filter">
                                                    <structure>
                                                        <property name="operator">eq</property>
                                                        <expression name="expr" type="javascript">row["ID"]</expression>
                                                        <simple-property-list name="value1">
                                                            <value>"Gauge2"</value>
                                                        </simple-property-list>
                                                        <property name="updateAggregation">true</property>
                                                    </structure>
                                                </list-property>
                                                <property name="height">90px</property>
                                                <property name="width">100%</property>
                                                <property name="dataSet">Gauge</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">ID</property>
                                                        <text-property name="displayName">ID</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["ID"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">VALUE</property>
                                                        <text-property name="displayName">VALUE</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["VALUE"]</expression>
                                                        <property name="dataType">float</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">MAX</property>
                                                        <text-property name="displayName">MAX</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["MAX"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">COLOR</property>
                                                        <text-property name="displayName">COLOR</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["COLOR"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                            </extended-item>
                                        </cell>
                                        <cell id="1945">
                                            <grid id="1946">
                                                <property name="height">100px</property>
                                                <column id="1947"/>
                                                <row id="1948">
                                                    <property name="verticalAlign">middle</property>
                                                    <cell id="1949">
                                                        <label id="1950">
                                                            <property name="fontSize">14pt</property>
                                                            <property name="paddingTop">5pt</property>
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="paddingBottom">5pt</property>
                                                            <text-property name="text" key="Goal: below 240 minutes">Goal: below 240 minutes</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                                <row id="1951">
                                                    <property name="verticalAlign">bottom</property>
                                                    <property name="height">10%</property>
                                                    <cell id="1952">
                                                        <image id="1953">
                                                            <property name="display">inline</property>
                                                            <property name="height">0.10084033613445378in</property>
                                                            <property name="width">0.12605042016806722in</property>
                                                            <property name="source">file</property>
                                                            <expression name="uri" type="constant">images/arrow up red.png</expression>
                                                        </image>
                                                        <text id="1975">
                                                            <property name="style">kpi_green</property>
                                                            <property name="color">#E74C3C</property>
                                                            <property name="display">inline</property>
                                                            <property name="contentType">html</property>
                                                            <text-property name="content"><![CDATA[ 2 %]]></text-property>
                                                        </text>
                                                        <label id="1955">
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="display">inline</property>
                                                            <text-property name="text" key="Increase vs last year">Increase vs last year</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </grid>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                        <row id="1911">
                            <property name="height">90px</property>
                            <cell id="1912">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingLeft">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="paddingRight">5pt</property>
                                <grid id="1956">
                                    <property name="backgroundColor">white</property>
                                    <property name="borderBottomColor">#E6E9ED</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftColor">#E6E9ED</property>
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">thin</property>
                                    <property name="borderRightColor">#E6E9ED</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">thin</property>
                                    <property name="borderTopColor">#E6E9ED</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <column id="1957">
                                        <property name="width">125px</property>
                                    </column>
                                    <column id="1958">
                                        <property name="width">185px</property>
                                    </column>
                                    <row id="1959">
                                        <cell id="1960">
                                            <property name="colSpan">2</property>
                                            <property name="rowSpan">1</property>
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">medium</property>
                                            <label id="1961">
                                                <property name="fontSize">14pt</property>
                                                <property name="paddingTop">5pt</property>
                                                <property name="paddingLeft">3pt</property>
                                                <property name="paddingBottom">5pt</property>
                                                <text-property name="text" key="Miles Driven">Miles Driven</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1962">
                                        <cell id="1963">
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingLeft">5pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">5pt</property>
                                            <extended-item extensionName="HTMLControl" id="1964">
                                                <method name="clientOnCreate"><![CDATA[var config = {
 	idColumn : "ID",
	valueColumn : "VALUE",
	valueMaxColumn : "MAX",
	colorColumn : "COLOR"
};

// set precision here
// if none, default value
var nbDec = 0;

// Read data set 
var cursor = this.getDataCursor();
var rowId = [];
var rowValue = [];
var rowMax = [];
var rowColor = [];

while (cursor.hasNext()) {
	var rowData = cursor.next();
	rowId.push(rowData[config.idColumn]);
	rowValue.push(rowData[config.valueColumn]);
	rowMax.push(rowData[config.valueMaxColumn]);
	rowColor.push(rowData[config.colorColumn]);
};

var customViz = this;
	
var callback = function() {
	debugger;
	var containerId = customViz.getId();
	myDiv = '<div style="position:relative">';
	myDiv += '<canvas id="' + rowId[0] + '" class="canvas_gauge" style="width:200px;height:100px;position:absolute;left:-50px"></canvas>';
	myDiv += '<span id="' + rowId[0] + '-lib" style="width:200px;position:absolute;left:-50px;text-align:center;top:25px;font-size:40px"></span>';
	myDiv += '</div>';
	$('#' + containerId).append(myDiv);
		
	var opts = {
  		lines: 1, // The number of lines to draw
  		angle: 0.2, // The length of each line
  		lineWidth: 0.1, // The line thickness
  		pointer: {
    		length: 0.9, // The radius of the inner circle
    		strokeWidth: 0.035, // The rotation offset
		},
  		limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
  		colorStop: rowColor[0],
  		strokeColor: '#F0F3F3',   // to see which ones work best for you
  		generateGradient: true,
	};

	var CustomTextRenderer = function(el){
    	this.el = el;
    	this.render = function(gauge){
    		debugger;
        	this.el.innerHTML = gauge.displayedValue.toFixed(nbDec);
    	}
	}
	CustomTextRenderer.prototype = new TextRenderer();

	var target = document.getElementById(rowId[0]); // your canvas element
	var gauge = new Donut(target).setOptions(opts); // create sexy gauge!
	gauge.maxValue = rowMax[0],
	gauge.animationSpeed = 15; // set animation speed (32 is default value)
	gauge.set(rowValue[0]); // set actual value
	gauge.setTextField(new CustomTextRenderer(document.getElementById(rowId[0] + "-lib")));

}

head.load(this.getBirtResourceURL('js/gauge.js'), callback);
]]></method>
                                                <list-property name="filter">
                                                    <structure>
                                                        <property name="operator">eq</property>
                                                        <expression name="expr" type="javascript">row["ID"]</expression>
                                                        <simple-property-list name="value1">
                                                            <value>"Gauge3"</value>
                                                        </simple-property-list>
                                                        <property name="updateAggregation">true</property>
                                                    </structure>
                                                </list-property>
                                                <property name="height">90px</property>
                                                <property name="width">1.35in</property>
                                                <property name="dataSet">Gauge</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">ID</property>
                                                        <text-property name="displayName">ID</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["ID"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">VALUE</property>
                                                        <text-property name="displayName">VALUE</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["VALUE"]</expression>
                                                        <property name="dataType">float</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">MAX</property>
                                                        <text-property name="displayName">MAX</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["MAX"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">COLOR</property>
                                                        <text-property name="displayName">COLOR</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["COLOR"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                            </extended-item>
                                        </cell>
                                        <cell id="1965">
                                            <grid id="1966">
                                                <property name="height">100px</property>
                                                <column id="1967"/>
                                                <row id="1968">
                                                    <property name="verticalAlign">middle</property>
                                                    <cell id="1969">
                                                        <label id="1970">
                                                            <property name="fontSize">14pt</property>
                                                            <property name="paddingTop">5pt</property>
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="paddingBottom">5pt</property>
                                                            <text-property name="text" key="Goal: above 100 miles">Goal: above 100 miles</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                                <row id="1971">
                                                    <property name="verticalAlign">bottom</property>
                                                    <property name="height">10%</property>
                                                    <cell id="1972">
                                                        <image id="1978">
                                                            <property name="display">inline</property>
                                                            <property name="height">0.08403361344537816in</property>
                                                            <property name="width">0.1092436974789916in</property>
                                                            <property name="source">file</property>
                                                            <expression name="uri" type="constant">images/arrow down green.png</expression>
                                                        </image>
                                                        <text id="1979">
                                                            <property name="style">kpi_green</property>
                                                            <property name="display">inline</property>
                                                            <property name="contentType">html</property>
                                                            <text-property name="content"><![CDATA[ 7 %]]></text-property>
                                                        </text>
                                                        <label id="1974">
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="display">inline</property>
                                                            <text-property name="text" key="Decrease vs last year">Decrease vs last year</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </grid>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                        <row id="1914">
                            <property name="height">90px</property>
                            <cell id="1915">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingLeft">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="paddingRight">5pt</property>
                                <grid id="1980">
                                    <property name="backgroundColor">white</property>
                                    <property name="borderBottomColor">#E6E9ED</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftColor">#E6E9ED</property>
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">thin</property>
                                    <property name="borderRightColor">#E6E9ED</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">thin</property>
                                    <property name="borderTopColor">#E6E9ED</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <column id="1981">
                                        <property name="width">125px</property>
                                    </column>
                                    <column id="1982">
                                        <property name="width">185px</property>
                                    </column>
                                    <row id="1983">
                                        <cell id="1984">
                                            <property name="colSpan">2</property>
                                            <property name="rowSpan">1</property>
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">medium</property>
                                            <label id="1985">
                                                <property name="fontSize">14pt</property>
                                                <property name="paddingTop">5pt</property>
                                                <property name="paddingLeft">3pt</property>
                                                <property name="paddingBottom">5pt</property>
                                                <text-property name="text" key="Speed Alerts">Speed Alerts</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1986">
                                        <cell id="1987">
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingLeft">5pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">5pt</property>
                                            <extended-item extensionName="HTMLControl" id="1988">
                                                <method name="clientOnCreate"><![CDATA[var config = {
 	idColumn : "ID",
	valueColumn : "VALUE",
	valueMaxColumn : "MAX",
	colorColumn : "COLOR"
};

// set precision here
// if none, default value
var nbDec = 0;

// Read data set 
var cursor = this.getDataCursor();
var rowId = [];
var rowValue = [];
var rowMax = [];
var rowColor = [];

while (cursor.hasNext()) {
	var rowData = cursor.next();
	rowId.push(rowData[config.idColumn]);
	rowValue.push(rowData[config.valueColumn]);
	rowMax.push(rowData[config.valueMaxColumn]);
	rowColor.push(rowData[config.colorColumn]);
};

var customViz = this;
	
var callback = function() {
	debugger;
	var containerId = customViz.getId();
	myDiv = '<div style="position:relative">';
	myDiv += '<canvas id="' + rowId[0] + '" class="canvas_gauge" style="width:200px;height:100px;position:absolute;left:-50px"></canvas>';
	myDiv += '<span id="' + rowId[0] + '-lib" style="width:200px;position:absolute;left:-50px;text-align:center;top:25px;font-size:40px"></span>';
	myDiv += '</div>';
	$('#' + containerId).append(myDiv);
		
	var opts = {
  		lines: 1, // The number of lines to draw
  		angle: 0.2, // The length of each line
  		lineWidth: 0.1, // The line thickness
  		pointer: {
    		length: 0.9, // The radius of the inner circle
    		strokeWidth: 0.035, // The rotation offset
		},
  		limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
  		colorStop: rowColor[0],
  		strokeColor: '#F0F3F3',   // to see which ones work best for you
  		generateGradient: true,
	};

	var CustomTextRenderer = function(el){
    	this.el = el;
    	this.render = function(gauge){
    		debugger;
        	this.el.innerHTML = gauge.displayedValue.toFixed(nbDec);
    	}
	}
	CustomTextRenderer.prototype = new TextRenderer();

	var target = document.getElementById(rowId[0]); // your canvas element
	var gauge = new Donut(target).setOptions(opts); // create sexy gauge!
	gauge.maxValue = rowMax[0],
	gauge.animationSpeed = 15; // set animation speed (32 is default value)
	gauge.set(rowValue[0]); // set actual value
	gauge.setTextField(new CustomTextRenderer(document.getElementById(rowId[0] + "-lib")));

}

head.load(this.getBirtResourceURL('js/gauge.js'), callback);
]]></method>
                                                <list-property name="filter">
                                                    <structure>
                                                        <property name="operator">eq</property>
                                                        <expression name="expr" type="javascript">row["ID"]</expression>
                                                        <simple-property-list name="value1">
                                                            <value>"Gauge4"</value>
                                                        </simple-property-list>
                                                        <property name="updateAggregation">true</property>
                                                    </structure>
                                                </list-property>
                                                <property name="height">90px</property>
                                                <property name="width">1.35in</property>
                                                <property name="dataSet">Gauge</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">ID</property>
                                                        <text-property name="displayName">ID</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["ID"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">VALUE</property>
                                                        <text-property name="displayName">VALUE</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["VALUE"]</expression>
                                                        <property name="dataType">float</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">MAX</property>
                                                        <text-property name="displayName">MAX</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["MAX"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">COLOR</property>
                                                        <text-property name="displayName">COLOR</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["COLOR"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                            </extended-item>
                                        </cell>
                                        <cell id="1989">
                                            <grid id="1990">
                                                <property name="height">100px</property>
                                                <column id="1991"/>
                                                <row id="1992">
                                                    <property name="verticalAlign">middle</property>
                                                    <cell id="1993">
                                                        <label id="1994">
                                                            <property name="fontSize">14pt</property>
                                                            <property name="paddingTop">5pt</property>
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="paddingBottom">5pt</property>
                                                            <text-property name="text" key="Goal: below 4 alerts">Goal: below 4 alerts</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                                <row id="1995">
                                                    <property name="verticalAlign">bottom</property>
                                                    <property name="height">10%</property>
                                                    <cell id="1996">
                                                        <image id="1997">
                                                            <property name="display">inline</property>
                                                            <property name="height">0.08403361344537816in</property>
                                                            <property name="width">0.1092436974789916in</property>
                                                            <property name="source">file</property>
                                                            <expression name="uri" type="constant">images/arrow down green.png</expression>
                                                        </image>
                                                        <text id="1998">
                                                            <property name="style">kpi_green</property>
                                                            <property name="display">inline</property>
                                                            <property name="contentType">html</property>
                                                            <text-property name="content"><![CDATA[ 2 %]]></text-property>
                                                        </text>
                                                        <label id="1999">
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="display">inline</property>
                                                            <text-property name="text" key="Decrease vs last year">Decrease vs last year</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </grid>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                        <row id="2000">
                            <property name="height">90px</property>
                            <cell id="2001">
                                <property name="paddingTop">5pt</property>
                                <property name="paddingLeft">5pt</property>
                                <property name="paddingBottom">5pt</property>
                                <property name="paddingRight">5pt</property>
                                <grid id="2002">
                                    <property name="backgroundColor">white</property>
                                    <property name="borderBottomColor">#E6E9ED</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftColor">#E6E9ED</property>
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">thin</property>
                                    <property name="borderRightColor">#E6E9ED</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">thin</property>
                                    <property name="borderTopColor">#E6E9ED</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <column id="2003">
                                        <property name="width">125px</property>
                                    </column>
                                    <column id="2004">
                                        <property name="width">185px</property>
                                    </column>
                                    <row id="2005">
                                        <cell id="2006">
                                            <property name="colSpan">2</property>
                                            <property name="rowSpan">1</property>
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">medium</property>
                                            <label id="2007">
                                                <property name="fontSize">14pt</property>
                                                <property name="paddingTop">5pt</property>
                                                <property name="paddingLeft">3pt</property>
                                                <property name="paddingBottom">5pt</property>
                                                <text-property name="text" key="General Customer Rating">General Customer Rating </text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2008">
                                        <cell id="2009">
                                            <property name="paddingTop">5pt</property>
                                            <property name="paddingLeft">5pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">5pt</property>
                                            <extended-item extensionName="HTMLControl" id="2010">
                                                <method name="clientOnCreate"><![CDATA[var config = {
 	idColumn : "ID",
	valueColumn : "VALUE",
	valueMaxColumn : "MAX",
	colorColumn : "COLOR"
};

// set precision here
var nbDec = 1;

// Read data set 
var cursor = this.getDataCursor();
var rowId = [];
var rowValue = [];
var rowMax = [];
var rowColor = [];

while (cursor.hasNext()) {
	var rowData = cursor.next();
	rowId.push(rowData[config.idColumn]);
	rowValue.push(rowData[config.valueColumn]);
	rowMax.push(rowData[config.valueMaxColumn]);
	rowColor.push(rowData[config.colorColumn]);
};

var customViz = this;
	
var callback = function() {
	debugger;
	var containerId = customViz.getId();
	myDiv = '<div style="position:relative">';
	myDiv += '<canvas id="' + rowId[0] + '" class="canvas_gauge" style="width:200px;height:100px;position:absolute;left:-50px"></canvas>';
	myDiv += '<span id="' + rowId[0] + '-lib" style="width:200px;position:absolute;left:-50px;text-align:center;top:25px;font-size:40px"></span>';
	myDiv += '</div>';
	$('#' + containerId).append(myDiv);
		
	var opts = {
  		lines: 1, // The number of lines to draw
  		angle: 0.2, // The length of each line
  		lineWidth: 0.1, // The line thickness
  		pointer: {
    		length: 0.9, // The radius of the inner circle
    		strokeWidth: 0.035, // The rotation offset
		},
  		limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
  		colorStop: rowColor[0],
  		strokeColor: '#F0F3F3',   // to see which ones work best for you
  		generateGradient: true,
	};

	var CustomTextRenderer = function(el){
    	this.el = el;
    	this.render = function(gauge){
    		debugger;
        	this.el.innerHTML = gauge.displayedValue.toFixed(nbDec);
    	}
	}
	CustomTextRenderer.prototype = new TextRenderer();

	var target = document.getElementById(rowId[0]); // your canvas element
	var gauge = new Donut(target).setOptions(opts); // create sexy gauge!
	gauge.maxValue = rowMax[0],
	gauge.animationSpeed = 15; // set animation speed (32 is default value)
	gauge.set(rowValue[0]); // set actual value
	gauge.setTextField(new CustomTextRenderer(document.getElementById(rowId[0] + "-lib")));

}

head.load(this.getBirtResourceURL('js/gauge.js'), callback);
]]></method>
                                                <list-property name="filter">
                                                    <structure>
                                                        <property name="operator">eq</property>
                                                        <expression name="expr" type="javascript">row["ID"]</expression>
                                                        <simple-property-list name="value1">
                                                            <value>"Gauge5"</value>
                                                        </simple-property-list>
                                                        <property name="updateAggregation">true</property>
                                                    </structure>
                                                </list-property>
                                                <property name="height">90px</property>
                                                <property name="width">1.35in</property>
                                                <property name="dataSet">Gauge</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">ID</property>
                                                        <text-property name="displayName">ID</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["ID"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">VALUE</property>
                                                        <text-property name="displayName">VALUE</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["VALUE"]</expression>
                                                        <property name="dataType">float</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">MAX</property>
                                                        <text-property name="displayName">MAX</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["MAX"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">COLOR</property>
                                                        <text-property name="displayName">COLOR</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["COLOR"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                            </extended-item>
                                        </cell>
                                        <cell id="2011">
                                            <grid id="2012">
                                                <property name="height">100px</property>
                                                <column id="2013"/>
                                                <row id="2014">
                                                    <property name="verticalAlign">middle</property>
                                                    <cell id="2015">
                                                        <label id="2016">
                                                            <property name="fontSize">14pt</property>
                                                            <property name="paddingTop">5pt</property>
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="paddingBottom">5pt</property>
                                                            <text-property name="text" key="Goal: over 4.5 stars">Goal: over 4.5 stars</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                                <row id="2017">
                                                    <property name="verticalAlign">bottom</property>
                                                    <property name="height">10%</property>
                                                    <cell id="2018">
                                                        <image id="2019">
                                                            <property name="display">inline</property>
                                                            <property name="height">0.08403361344537816in</property>
                                                            <property name="width">0.1092436974789916in</property>
                                                            <property name="source">file</property>
                                                            <expression name="uri" type="constant">images/arrow up green.png</expression>
                                                        </image>
                                                        <text id="2020">
                                                            <property name="style">kpi_green</property>
                                                            <property name="display">inline</property>
                                                            <property name="contentType">html</property>
                                                            <text-property name="content"><![CDATA[ 2 %]]></text-property>
                                                        </text>
                                                        <label id="2021">
                                                            <property name="paddingLeft">3pt</property>
                                                            <property name="display">inline</property>
                                                            <text-property name="text" key="Increase vs last year">Increase vs last year</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </grid>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
            <row id="1838">
                <cell id="1839">
                    <property name="paddingTop">5pt</property>
                    <property name="paddingLeft">5pt</property>
                    <property name="paddingBottom">5pt</property>
                    <property name="paddingRight">5pt</property>
                    <grid id="1882">
                        <property name="backgroundColor">white</property>
                        <property name="borderBottomColor">#E6E9ED</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftColor">#E6E9ED</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightColor">#E6E9ED</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopColor">#E6E9ED</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <column id="1883">
                            <property name="width">100%</property>
                        </column>
                        <row id="1884">
                            <cell id="1885">
                                <property name="borderBottomColor">#ACB8C4</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">medium</property>
                                <label id="123">
                                    <property name="fontSize">16pt</property>
                                    <property name="fontWeight">normal</property>
                                    <property name="marginBottom">0pt</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">3pt</property>
                                    <property name="paddingBottom">5pt</property>
                                    <property name="display">block</property>
                                    <text-property name="text" key="In Transit">In Transit</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="1886">
                            <cell id="1887">
                                <property name="paddingTop">10px</property>
                                <property name="paddingLeft">0pt</property>
                                <property name="paddingRight">0pt</property>
                                <table id="1842">
                                    <property name="fontFamily">"Tahoma"</property>
                                    <property name="dataSet">Monitoring Data Set</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">VehicleMake</property>
                                            <text-property name="displayName">VehicleMake</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["VehicleMake"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">pred_Failure</property>
                                            <text-property name="displayName">pred_Failure</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["pred_Failure"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">CustomerName1</property>
                                            <text-property name="displayName">CustomerName</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["CustomerName1"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">CarType1</property>
                                            <text-property name="displayName">CarType</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["CarType1"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Satisfaction1</property>
                                            <text-property name="displayName">Satisfaction</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Satisfaction1"]</expression>
                                            <property name="dataType">integer</property>
                                        </structure>
                                        <structure>
                                            <property name="name">Probable Cuae</property>
                                            <expression name="expression" type="javascript">if (row["pred_Failure"]>0.8) {&#13;
	"Excessive use of brakes"&#13;
}&#13;
else if (row["pred_Failure"]>0.6) {&#13;
	"Loss of oil viscosity due to high speeds"&#13;
}</expression>
                                            <property name="dataType">string</property>
                                            <property name="allowExport">true</property>
                                        </structure>
                                    </list-property>
                                    <list-property name="sort">
                                        <structure>
                                            <expression name="key" type="javascript">row["pred_Failure"]</expression>
                                            <property name="direction">desc</property>
                                            <property name="strength">-1</property>
                                        </structure>
                                    </list-property>
                                    <column id="1855">
                                        <property name="textAlign">left</property>
                                        <property name="width">2in</property>
                                    </column>
                                    <column id="1856">
                                        <property name="textAlign">left</property>
                                        <property name="width">1in</property>
                                    </column>
                                    <column id="1857">
                                        <property name="textAlign">left</property>
                                        <property name="width">1.6in</property>
                                    </column>
                                    <column id="1871">
                                        <property name="textAlign">left</property>
                                        <property name="width">2.7in</property>
                                    </column>
                                    <column id="1867">
                                        <property name="width">270px</property>
                                    </column>
                                    <column id="1858">
                                        <property name="width">0.7in</property>
                                    </column>
                                    <column id="1859"/>
                                    <header>
                                        <row id="1843">
                                            <property name="borderBottomColor">#ACB8C4</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftStyle">none</property>
                                            <property name="borderRightStyle">none</property>
                                            <property name="borderTopStyle">none</property>
                                            <property name="verticalAlign">middle</property>
                                            <property name="height">35px</property>
                                            <cell id="1828">
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1844">
                                                    <property name="paddingLeft">3pt</property>
                                                    <text-property name="text" key="Storage Location">Storage Location</text-property>
                                                </label>
                                            </cell>
                                            <cell id="1845">
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1835">
                                                    <text-property name="text" key="Car Type">Car Type</text-property>
                                                </label>
                                            </cell>
                                            <cell id="1832">
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1846">
                                                    <text-property name="text" key="Vehicle Make">Vehicle Make</text-property>
                                                </label>
                                            </cell>
                                            <cell id="1868">
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1872">
                                                    <text-property name="text" key="Probable Cause">Probable Cause</text-property>
                                                </label>
                                            </cell>
                                            <cell id="1864">
                                                <property name="colSpan">2</property>
                                                <property name="rowSpan">1</property>
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1874">
                                                    <property name="textAlign">center</property>
                                                    <text-property name="text" key="Failure Prediction">Failure Prediction</text-property>
                                                </label>
                                            </cell>
                                            <cell id="1836">
                                                <property name="paddingBottom">1pt</property>
                                                <label id="1837">
                                                    <text-property name="text" key="Satisfaction">Satisfaction</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="1875">
                                            <method name="onCreate"><![CDATA[rowNb++;]]></method>
                                            <property name="borderBottomColor">#F5F5F5</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#F5F5F5</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#F5F5F5</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#F5F5F5</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="verticalAlign">middle</property>
                                            <list-property name="highlightRules">
                                                <structure>
                                                    <property name="operator">ne</property>
                                                    <property name="backgroundColor">#FAFAFA</property>
                                                    <expression name="testExpr" type="javascript">rowNb % 2</expression>
                                                    <simple-property-list name="value1">
                                                        <value type="javascript">0</value>
                                                    </simple-property-list>
                                                </structure>
                                            </list-property>
                                            <cell id="1876">
                                                <data id="1877">
                                                    <property name="paddingLeft">3pt</property>
                                                    <property name="resultSetColumn">CustomerName1</property>
                                                </data>
                                            </cell>
                                            <cell id="1878">
                                                <data id="1879">
                                                    <property name="resultSetColumn">CarType1</property>
                                                </data>
                                            </cell>
                                            <cell id="1880">
                                                <data id="1840">
                                                    <property name="resultSetColumn">VehicleMake</property>
                                                </data>
                                            </cell>
                                            <cell id="1869">
                                                <data id="1873">
                                                    <property name="resultSetColumn">Probable Cuae</property>
                                                </data>
                                            </cell>
                                            <cell id="1865">
                                                <property name="textAlign">right</property>
                                                <extended-item extensionName="Chart" id="1349">
                                                    <xml-property name="xmlRepresentation"><![CDATA[<ActuateChart version="2.6.1">
 <ChartWithAxes version="2.6.1" type="Bar Chart" subType="Percent Stacked" orientation="0">
  <block>
   <children _type="TitleBlock" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <label>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
   </children>
   <children _type="Plot" horizontalSpacing="0" verticalSpacing="0">
    <outline visible="false">
     <color _nil="1"/>
    </outline>
    <background _body=",0,255,255,255"/>
    <clientArea>
     <background _body=",0,255,255,255"/>
     <outline visible="false">
      <color _nil="1"/>
     </outline>
    </clientArea>
   </children>
   <children _type="Legend" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
    <separator>
     <color _nil="1"/>
    </separator>
    <title>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
   </children>
   <bounds _body="0.0,0.0,144.75,130.0"/>
   <insets _body="0.0,0.0,0.0,0.0"/>
   <outline visible="false">
    <color _nil="1"/>
   </outline>
   <background _body=",255,255,255,255"/>
   <cursor type="0"/>
  </block>
  <extendedProperties name="enable.area.alt" value="false"/>
  <extendedProperties name="enable.drill.category" value="true"/>
  <extendedProperties name="enable.drill.series" value="true"/>
  <extendedProperties name="jschart.client.script" value=""/>
  <extendedProperties name="jschart.series.shadow" value="false"/>
  <extendedProperties name="jschart.animation" value="false"/>
  <sampleData>
   <baseSampleData dataSetRepresentation="&#039;A&#039;,&#039;B&#039;,&#039;C&#039;,&#039;D&#039;,&#039;E&#039;"/>
   <orthogonalSampleData dataSetRepresentation="6,4,12,8,10" seriesDefinitionIndex="0"/>
   <orthogonalSampleData dataSetRepresentation="12.0,8.0,24.0,16.0,20.0" seriesDefinitionIndex="1"/>
   <orthogonalSampleData dataSetRepresentation="18.0,12.0,36.0,24.0,30.0" seriesDefinitionIndex="2"/>
   <orthogonalSampleData dataSetRepresentation="24.0,16.0,48.0,32.0,40.0" seriesDefinitionIndex="3"/>
  </sampleData>
  <interactivity enable="false"/>
  <emptyMessage>
   <caption value="This chart contains no data."/>
   <background _body=",64,127,127,127"/>
   <outline>
    <color _body=",128,127,127,127"/>
   </outline>
  </emptyMessage>
  <axes>
   <title visible="false">
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </title>
   <associatedAxes type="0" primaryAxis="true" percent="true" aligned="false">
    <title visible="false">
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Low" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt;=0.8) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Middle" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt;0.6 &amp;&amp; row[&quot;pred_Failure&quot;] &lt;= 0.8 ) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Good" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &lt;0.6 ) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Series 4" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt; 100 ) 0&#13;&#10;else 1 - row[&quot;pred_Failure&quot;]">
       <grouping aggregateExpression="Max"/>
      </dataDefinition>
      <triggers condition="6">
       <action type="1">
        <value _type="TooltipValue" text="" delay="200"/>
       </action>
      </triggers>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
    </seriesDefinitions>
    <lineAttributes visible="false">
     <color _nil="1"/>
    </lineAttributes>
    <label visible="false">
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
    <majorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes visible="false">
      <color _nil="1"/>
     </tickAttributes>
    </majorGrid>
    <minorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes>
      <color _nil="1"/>
     </tickAttributes>
    </minorGrid>
    <origin>
     <value _nil="1"/>
    </origin>
   </associatedAxes>
   <seriesDefinitions>
    <query definition=""/>
    <seriesPalette>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,250,29,29"/>
      <endColor _body=",255,226,2,2"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,226,216,82"/>
      <endColor _body=",255,255,255,13"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,26,187,156"/>
      <endColor _body=",255,23,159,133"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,226,226,226"/>
      <endColor _body=",255,245,245,245"/>
     </entries>
     <entries _body=",255,64,128,128"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,170,85,85"/>
     <entries _body=",255,128,128,0"/>
     <entries _body=",255,192,192,192"/>
     <entries _body=",255,255,255,128"/>
     <entries _body=",255,128,192,128"/>
     <entries _body=",255,7,146,94"/>
     <entries _body=",255,0,128,255"/>
     <entries _body=",255,255,128,192"/>
     <entries _body=",255,0,255,255"/>
     <entries _body=",255,255,128,128"/>
     <entries _body=",255,0,128,192"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,255,0,255"/>
     <entries _body=",255,128,64,64"/>
     <entries _body=",255,255,128,64"/>
     <entries _body=",255,80,240,120"/>
     <entries _body=",255,0,64,128"/>
     <entries _body=",255,128,0,64"/>
     <entries _body=",255,255,0,128"/>
     <entries _body=",255,128,128,64"/>
     <entries _body=",255,128,128,128"/>
     <entries _body=",255,255,128,255"/>
     <entries _body=",255,0,64,0"/>
     <entries _body=",255,0,0,0"/>
     <entries _body=",255,255,255,255"/>
     <entries _body=",255,255,128,0"/>
    </seriesPalette>
    <series seriesIdentifier="">
     <label>
      <background _nil="1"/>
      <outline>
       <color _nil="1"/>
      </outline>
     </label>
     <dataDefinition definition="row[&quot;CustomerName1&quot;]"/>
     <curveFitting _nil="1"/>
    </series>
    <grouping enabled="true"/>
   </seriesDefinitions>
   <lineAttributes visible="false">
    <color _nil="1"/>
   </lineAttributes>
   <label visible="false">
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </label>
   <majorGrid>
    <lineAttributes>
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </majorGrid>
   <minorGrid>
    <lineAttributes visible="false">
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </minorGrid>
   <origin>
    <value _nil="1"/>
   </origin>
  </axes>
  <rotation>
   <angles/>
  </rotation>
 </ChartWithAxes>
</ActuateChart>
]]></xml-property>
                                                    <property name="outputFormat">PNG</property>
                                                    <property name="inheritColumns">false</property>
                                                    <property name="height">30px</property>
                                                    <property name="width">250px</property>
                                                    <list-property name="visibility">
                                                        <structure>
                                                            <property name="format">all</property>
                                                            <expression name="valueExpr" type="javascript">rowNb % 2 == 0</expression>
                                                        </structure>
                                                    </list-property>
                                                </extended-item>
                                                <extended-item extensionName="Chart" id="1902">
                                                    <xml-property name="xmlRepresentation"><![CDATA[<ActuateChart version="2.6.1">
 <ChartWithAxes version="2.6.1" type="Bar Chart" subType="Percent Stacked" orientation="0">
  <block>
   <children _type="TitleBlock" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <label>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
   </children>
   <children _type="Plot" horizontalSpacing="0" verticalSpacing="0">
    <outline visible="false">
     <color _nil="1"/>
    </outline>
    <background _body=",0,255,255,255"/>
    <clientArea>
     <background _body=",0,255,255,255"/>
     <outline visible="false">
      <color _nil="1"/>
     </outline>
    </clientArea>
   </children>
   <children _type="Legend" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
    <separator>
     <color _nil="1"/>
    </separator>
    <title>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
   </children>
   <bounds _body="0.0,0.0,144.75,130.0"/>
   <insets _body="0.0,0.0,0.0,0.0"/>
   <outline visible="false">
    <color _nil="1"/>
   </outline>
   <background _body=",255,250,250,250"/>
   <cursor type="0"/>
  </block>
  <extendedProperties name="enable.area.alt" value="false"/>
  <extendedProperties name="enable.drill.category" value="true"/>
  <extendedProperties name="enable.drill.series" value="true"/>
  <extendedProperties name="jschart.client.script" value=""/>
  <extendedProperties name="jschart.series.shadow" value="false"/>
  <extendedProperties name="jschart.animation" value="false"/>
  <sampleData>
   <baseSampleData dataSetRepresentation="&#039;A&#039;,&#039;B&#039;,&#039;C&#039;,&#039;D&#039;,&#039;E&#039;"/>
   <orthogonalSampleData dataSetRepresentation="6,4,12,8,10" seriesDefinitionIndex="0"/>
   <orthogonalSampleData dataSetRepresentation="12.0,8.0,24.0,16.0,20.0" seriesDefinitionIndex="1"/>
   <orthogonalSampleData dataSetRepresentation="18.0,12.0,36.0,24.0,30.0" seriesDefinitionIndex="2"/>
   <orthogonalSampleData dataSetRepresentation="24.0,16.0,48.0,32.0,40.0" seriesDefinitionIndex="3"/>
  </sampleData>
  <interactivity enable="false"/>
  <emptyMessage>
   <caption value="This chart contains no data."/>
   <background _body=",64,127,127,127"/>
   <outline>
    <color _body=",128,127,127,127"/>
   </outline>
  </emptyMessage>
  <axes>
   <title visible="false">
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </title>
   <associatedAxes type="0" primaryAxis="true" percent="true" aligned="false">
    <title visible="false">
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Low" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt;=0.8) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Middle" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt;0.6 &amp;&amp; row[&quot;pred_Failure&quot;] &lt;= 0.8 ) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Good" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &lt;0.6 ) row[&quot;pred_Failure&quot;]&#13;&#10;else 0">
       <grouping enabled="true" aggregateExpression="Max"/>
      </dataDefinition>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,226,226"/>
       <endColor _body=",255,245,245,245"/>
      </entries>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,250,29,29"/>
       <endColor _body=",255,226,2,2"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,226,216,82"/>
       <endColor _body=",255,255,255,13"/>
      </entries>
      <entries _type="Gradient" type="0" direction="-90.0">
       <startColor _body=",255,26,187,156"/>
       <endColor _body=",255,23,159,133"/>
      </entries>
     </seriesPalette>
     <series _type="BarSeries" seriesIdentifier="Series 4" labelPosition="4" stacked="true" riser="0">
      <label visible="false">
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if(row[&quot;pred_Failure&quot;] &gt; 100 ) 0&#13;&#10;else 1 - row[&quot;pred_Failure&quot;]">
       <grouping aggregateExpression="Max"/>
      </dataDefinition>
      <triggers condition="6">
       <action type="1">
        <value _type="TooltipValue" text="" delay="200"/>
       </action>
      </triggers>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
     </series>
    </seriesDefinitions>
    <lineAttributes visible="false">
     <color _nil="1"/>
    </lineAttributes>
    <label visible="false">
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
    <majorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes visible="false">
      <color _nil="1"/>
     </tickAttributes>
    </majorGrid>
    <minorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes>
      <color _nil="1"/>
     </tickAttributes>
    </minorGrid>
    <origin>
     <value _nil="1"/>
    </origin>
   </associatedAxes>
   <seriesDefinitions>
    <query definition=""/>
    <seriesPalette>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,250,29,29"/>
      <endColor _body=",255,226,2,2"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,226,216,82"/>
      <endColor _body=",255,255,255,13"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,26,187,156"/>
      <endColor _body=",255,23,159,133"/>
     </entries>
     <entries _type="Gradient" type="0" direction="-90.0">
      <startColor _body=",255,226,226,226"/>
      <endColor _body=",255,245,245,245"/>
     </entries>
     <entries _body=",255,64,128,128"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,170,85,85"/>
     <entries _body=",255,128,128,0"/>
     <entries _body=",255,192,192,192"/>
     <entries _body=",255,255,255,128"/>
     <entries _body=",255,128,192,128"/>
     <entries _body=",255,7,146,94"/>
     <entries _body=",255,0,128,255"/>
     <entries _body=",255,255,128,192"/>
     <entries _body=",255,0,255,255"/>
     <entries _body=",255,255,128,128"/>
     <entries _body=",255,0,128,192"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,255,0,255"/>
     <entries _body=",255,128,64,64"/>
     <entries _body=",255,255,128,64"/>
     <entries _body=",255,80,240,120"/>
     <entries _body=",255,0,64,128"/>
     <entries _body=",255,128,0,64"/>
     <entries _body=",255,255,0,128"/>
     <entries _body=",255,128,128,64"/>
     <entries _body=",255,128,128,128"/>
     <entries _body=",255,255,128,255"/>
     <entries _body=",255,0,64,0"/>
     <entries _body=",255,0,0,0"/>
     <entries _body=",255,255,255,255"/>
     <entries _body=",255,255,128,0"/>
    </seriesPalette>
    <series seriesIdentifier="">
     <label>
      <background _nil="1"/>
      <outline>
       <color _nil="1"/>
      </outline>
     </label>
     <dataDefinition definition="row[&quot;CustomerName1&quot;]"/>
     <curveFitting _nil="1"/>
    </series>
    <grouping enabled="true"/>
   </seriesDefinitions>
   <lineAttributes visible="false">
    <color _nil="1"/>
   </lineAttributes>
   <label visible="false">
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </label>
   <majorGrid>
    <lineAttributes>
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </majorGrid>
   <minorGrid>
    <lineAttributes visible="false">
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </minorGrid>
   <origin>
    <value _nil="1"/>
   </origin>
  </axes>
  <rotation>
   <angles/>
  </rotation>
 </ChartWithAxes>
</ActuateChart>
]]></xml-property>
                                                    <property name="outputFormat">PNG</property>
                                                    <property name="inheritColumns">false</property>
                                                    <property name="height">30px</property>
                                                    <property name="width">250px</property>
                                                    <list-property name="visibility">
                                                        <structure>
                                                            <property name="format">all</property>
                                                            <expression name="valueExpr" type="javascript">rowNb % 2 != 0</expression>
                                                        </structure>
                                                    </list-property>
                                                </extended-item>
                                            </cell>
                                            <cell id="1881">
                                                <text id="1330">
                                                    <property name="textAlign">left</property>
                                                    <property name="contentType">html</property>
                                                    <text-property name="content"><![CDATA[<span style = "display: inline-block;
min-width: 45px;
padding: 3px 7px;
font-size: 12px;
font-weight: 700;
line-height: 1;
<VALUE-OF>if(row["pred_Failure"]<1) 'color: #3C3C3C;'</VALUE-OF>
text-align: center;
white-space: nowrap;
vertical-align: baseline;
border-radius: 10px;
background-color :  <VALUE-OF>if(row["pred_Failure"]<0.6) '#19B99A'
else if(row["pred_Failure"]<0.8) '#fee660'
else '#fa4c4e'</VALUE-OF>;">
<VALUE-OF>Formatter.format(row["pred_Failure"],"0.0%")</VALUE-OF></span>]]></text-property>
                                                </text>
                                            </cell>
                                            <cell id="1847">
                                                <property name="textAlign">center</property>
                                                <image id="1863">
                                                    <property name="height">21px</property>
                                                    <property name="source">file</property>
                                                    <expression name="uri" type="javascript">"images/star " + row["Satisfaction1"] + ".png"</expression>
                                                </image>
                                            </cell>
                                        </row>
                                    </detail>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
    </body>
</report>
